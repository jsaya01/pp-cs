{"version":3,"sources":["assets/img/logo.png","components/SemanticInput/index.js","components/Button/index.js","UserPool.js","views/Login.js","views/Forgot.js","views/ChangePassword.js","assets/img/faces/face-2.jpg","views/Users.js","views/UserDetail.js","views/Questions.js","views/Confirmation.js","actions/types.js","utils/AppUtils.js","const/variables.js","reducers/auth.js","reducers/admin.js","reducers/requests.js","reducers/index.js","store/index.js","index.js"],"names":["SemanticInput","props","Form","Field","style","width","Input","formStyles","value","type","placeholder","onChange","onBlur","onKeyUp","name","className","iconPosition","position","icon","Icon","link","onClick","onIcon","ButtonView","Button","variant","block","disabled","title","CognitoUserPool","UserPoolId","ClientId","region","Login","addToast","useToasts","validationSchema","Yup","shape","email","max","required","password","loginUser","values","CognitoUser","Username","Pool","UserPool","authDetails","AuthenticationDetails","Password","authenticateUser","onSuccess","data","console","log","JSON","stringify","appearance","idToken","window","location","href","onFailure","error","message","autoDismiss","Container","Row","src","logo","md","Col","sm","initialValues","enableReinitialize","onSubmit","a","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","noGutters","e","keyCode","Forgot","forgotPass","username","forgotPassword","err","inputVerificationCode","localStorage","setItem","ChangePassword","resetPassword","code","getItem","getUser","confirmPassword","Users","class","search","Card","Body","Image","userPics","roundedCircle","Text","Title","UserDetail","Header","Table","responsive","InputGroup","Checkbox","checked","Questions","Group","controlId","Check","label","Confirmation","setSubmitting","resetForm","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_SUCCESS","ADMIN_REQUEST","ADMIN_FAILURE","ADMIN_USER_SUCCESS","ADMIN_LEGACY_SUCCESS","ADMIN_BURIAL_SUCCESS","ADMIN_CHARITY_SUCCESS","ADMIN_DONATION_SUCCESS","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILURE","GET_MEMORIAL_REQUEST","GET_MEMORIAL_SUCCESS","GET_MEMORIAL_FAILURE","COUNT_REQUEST","COUNT_SUCCESS","COUNT_FAILURE","ADMIN_PROFILE_REQUEST","ADMIN_PROFILE_SUCCESS","ADMIN_PROFILE_FAILURE","GET_DONATION_REQUEST","GET_DONATION_SUCCESS","GET_DONATION_FAILURE","SEND_DONATION_REQUEST","SEND_DONATION_SUCCESS","SEND_DONATION_FAILURE","AppUtils","showMessage","key","getCommonHeaders","accessToken","commonHeaders","Authorization","getMultipartHeaders","getStripeHeaders","dataUrlToFile","dataUrl","fileName","Date","getTime","fetch","res","blob","File","dataUrlToMedia","file","object","path","storeItem","reteriveItem","parse","formatDate","inputDate","fortnightAway","date","getDate","month","getMonth","this","nth","sup","getFullYear","formatDate1","day","getDay","d","makeUniqueId","length","onlyNumeric","result","characters","charactersLength","i","charAt","Math","floor","random","capitalize","s","toUpperCase","slice","formatter","text","replace","Intl","NumberFormat","currency","minimumFractionDigits","format","normalizePhoneInput","previousValue","onlyNums","formatPhoneNumber","numbers","char","initialState","refreshToken","loading","user","users","legacy","burial","charity","donation","count","profile","memorial","number","phone","other","address","street","house","city","country","state","zip","filePath","firstName","lastName","fullName","prefix","suffix","legal_name","middle_name","isLegal","isBilling","isVeteran","isName","isEmail","dob","dop","martial","religon","gender","requests","appReducer","combineReducers","auth","action","payload","isAuthenticated","userType","admin","rootReducer","includes","undefined","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","styles","container","provided","zIndex","top","component","UserDetails","from","to","document","getElementById"],"mappings":";uWAAe,MAA0B,iC,mDCsC1BA,MAlCf,SAAuBC,GAGrB,OAEE,cAACC,EAAA,EAAKC,MAAN,CAAcC,MAAO,CAAEC,MAAO,QAA9B,SACE,cAACC,EAAA,EAAD,CAEEF,MAAOH,EAAMM,WAAaN,EAAMM,WAAa,CAAEF,MAAO,QACtDG,MAAOP,EAAMO,MACbC,KAAMR,EAAMQ,KAAOR,EAAMQ,KAAO,OAChCC,YAAaT,EAAMS,YACnBC,SAAUV,EAAMU,SAAWV,EAAMU,SAAW,KAC5CC,OAAQX,EAAMW,OAASX,EAAMW,OAAS,KACtCC,QAASZ,EAAMY,QAAUZ,EAAMY,QAAU,KACzCC,KAAMb,EAAMa,KACZC,UAAWd,EAAMc,UACjBC,aAAcf,EAAMgB,SACpBC,KAAMjB,EAAMiB,KACV,cAACC,EAAA,EAAD,CACEL,KAAMb,EAAMiB,KACZE,MAAI,EACJC,QAAS,kBAAIpB,EAAMqB,OAAOrB,EAAMqB,SAAS,QAG3C,U,SCZKC,MAdf,SAAoBtB,GAClB,OACE,cAACuB,EAAA,EAAD,CACEC,QAASxB,EAAMwB,QACfrB,MAAOH,EAAMG,MACbsB,MAAOzB,EAAMyB,MACbC,WAAU1B,EAAM0B,UAAS1B,EAAM0B,SAC/BN,QAAS,kBAAIpB,EAAMoB,QAAQpB,EAAMoB,UAAU,MAL7C,SAOGpB,EAAM2B,S,gBCHE,MAAIC,IAPJ,CACXC,WAAY,sBACZC,SAAU,6BACVC,OAAO,cC4IIC,MAtIf,WACI,IAAQC,EAAaC,sBAAbD,SACFE,EAAmBC,MAAaC,MAAM,CACxCC,MAAOF,MACFE,MAAM,8BACNC,IAAI,IAAK,0CACTC,SAAS,qBACdC,SAAUL,MACLI,SAAS,0BAGlB,SAASE,EAAUC,GAEf,IAAML,EAAQ,IAAIM,IAAY,CAC1BC,SAAUF,EAAOL,MACjBQ,KAAMC,IAGJC,EAAc,IAAIC,IAAsB,CAC1CJ,SAAUF,EAAOL,MACjBY,SAAUP,EAAOF,WAGrBH,EAAMa,iBAAiBH,EAAa,CAChCI,UAAW,SAACC,GACRC,QAAQC,IAAIC,KAAKC,UAAUJ,IAC3BpB,EAAS,gBAAiB,CAAEyB,WAAY,YACxCJ,QAAQC,IAAIF,EAAKM,SACjBC,OAAOC,SAASC,KAAO,UAE3BC,UAAW,SAACC,GACR/B,EAAS+B,EAAMC,QAAS,CACpBP,WAAY,QACZQ,aAAa,OAM7B,OACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKtD,UAAU,yBAAf,SACI,qBAAKA,UAAU,iBAAiBuD,IAAKC,MAEzC,eAACF,EAAA,EAAD,CAAKG,GAAI,GAAT,UACI,cAACC,EAAA,EAAD,CAAKD,GAAI,EAAGzD,UAAU,mBAAmB2D,GAAI,EAA7C,SACI,sBAAK3D,UAAU,iBAAf,UACI,eAACsD,EAAA,EAAD,CAAKtD,UAAU,8BAAf,UACI,oBAAIA,UAAU,QAAd,sBACA,mBAAGA,UAAU,cAAb,qIAEJ,cAAC,IAAD,CACI4D,cAAe,CAAEpC,MAAO,GAAIG,SAAU,IAEtCN,iBAAkBA,EAClBwC,oBAAoB,EACpBC,SAAQ,uCAAE,WAAOjC,GAAP,SAAAkC,EAAA,sDACNnC,EAAUC,GADJ,2CAAF,sDALZ,SAQK,gBACGA,EADH,EACGA,OACAmC,EAFH,EAEGA,OACAC,EAHH,EAGGA,QACAC,EAJH,EAIGA,aACAC,EALH,EAKGA,WACAC,EANH,EAMGA,aANH,EAOGC,aAPH,OASG,qCACI,eAACf,EAAA,EAAD,CAAKtD,UAAU,yBAAyBsE,WAAS,EAAjD,UACI,eAACZ,EAAA,EAAD,CAAKD,GAAI,EAAT,UACI,cAAC,EAAD,CACI9D,YAAa,2BACbQ,KAAM,WACND,SAAU,OACVH,KAAK,QACLH,SAAUsE,EACVrE,OAAQsE,EACR1E,MAAOoC,EAAOL,MACdxB,UAAWiE,EAAQzC,OAASwC,EAAOxC,MAAQ,QAAU,KACrD1B,QAAS,SAACyE,GAAD,OAAqB,KAAdA,EAAEC,QAAiBJ,IAAiB,QAEvDH,EAAQzC,OAASwC,EAAOxC,MACrB,qBAAKxB,UAAU,gBAAf,SAAgCgE,EAAOxC,QACvC,QAER,eAACkC,EAAA,EAAD,CAAKD,GAAI,EAAT,UACI,cAAC,EAAD,CACI/D,KAAM,WACNC,YAAa,sBACbQ,KAAM,MACND,SAAU,OACVH,KAAK,WACLH,SAAUsE,EACVrE,OAAQsE,EACR1E,MAAOoC,EAAOF,SACd3B,UAAWiE,EAAQtC,UAAYqC,EAAOrC,SAAW,QAAU,KAC3D7B,QAAS,SAACyE,GAAD,OAAqB,KAAdA,EAAEC,QAAiBJ,IAAiB,QAIvDH,EAAQtC,UAAYqC,EAAOrC,SACxB,qBAAK3B,UAAU,gBAAf,SAAgCgE,EAAOrC,WACvC,WAIZ,cAAC2B,EAAA,EAAD,CAAKtD,UAAW,8BAA+BsE,WAAS,EAAxD,SACI,cAACZ,EAAA,EAAD,CAAKD,GAAI,EAAT,SACI,mBAAGT,KAAK,WAAR,SAAmB,mBAAGhD,UAAU,qBAAb,yCAG3B,cAACsD,EAAA,EAAD,CAAKtD,UAAW,8BAA+BsE,WAAS,EAAxD,SACI,cAACZ,EAAA,EAAD,CAAKD,GAAI,EAAGzD,UAAU,gCAAtB,SACI,cAAC,EAAD,CACIU,QAAS,UACTG,MAAO,QACPF,OAAO,EACPL,QAAS8D,mBAUzC,cAACV,EAAA,EAAD,CAAKD,GAAI,EAAGE,GAAI,WC7BjBc,MApGf,WACI,IAAQtD,EAAaC,sBAAbD,SACR,SAASuD,EAAW7C,GAGL,IAAIC,IAAY,CACnBC,SAAUF,EAAO8C,SACjB3C,KAAMC,IAIJ2C,eAAe,CACrBtC,UAAW,SAAAC,GACPO,OAAOC,SAASC,KAAO,oBAE3BC,UAAW,SAAA4B,GACPrC,QAAQU,MAAM,aAAc2B,GAC5B1D,EAAS0D,EAAI1B,QAAS,CAClBP,WAAY,QACZQ,aAAa,KAGrB0B,sBAAuB,SAAAvC,GACnBwC,aAAaC,QAAQ,WAAWnD,EAAO8C,UACvC7B,OAAOC,SAASC,KAAO,sBAKnC,OACI,eAACK,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKtD,UAAU,yBAAf,SACI,qBAAKA,UAAU,iBAAiBuD,IAAKC,MAEzC,eAACF,EAAA,EAAD,CAAKG,GAAI,GAAT,UACI,cAACC,EAAA,EAAD,CAAKD,GAAI,EAAGzD,UAAU,mBAAmB2D,GAAI,EAA7C,SACI,sBAAK3D,UAAU,iBAAf,UACI,cAACsD,EAAA,EAAD,CAAKtD,UAAU,8BAAf,SACI,oBAAIA,UAAU,QAAd,gCAEJ,cAAC,IAAD,CACI4D,cAAe,CAAEpC,MAAO,IAExBqC,oBAAoB,EACpBC,SAAQ,uCAAE,WAAOjC,GAAP,SAAAkC,EAAA,sDACNW,EAAW7C,GADL,2CAAF,sDAJZ,SAOK,gBACGA,EADH,EACGA,OACAmC,EAFH,EAEGA,OACAC,EAHH,EAGGA,QACAC,EAJH,EAIGA,aACAC,EALH,EAKGA,WACAC,EANH,EAMGA,aANH,EAOGC,aAPH,OASG,qCACI,cAACf,EAAA,EAAD,CAAKtD,UAAU,yBAAyBsE,WAAS,EAAjD,SACI,eAACZ,EAAA,EAAD,CAAKD,GAAI,EAAT,UACI,cAAC,EAAD,CACI9D,YAAa,uBACbQ,KAAM,WACND,SAAU,OACVH,KAAK,WACLH,SAAUsE,EACVrE,OAAQsE,EACR1E,MAAOoC,EAAO8C,SACd3E,UAAWiE,EAAQU,UAAYX,EAAOW,SAAW,QAAU,KAC3D7E,QAAS,SAACyE,GAAD,OAAqB,KAAdA,EAAEC,QAAiBJ,IAAiB,QAEvDH,EAAQU,UAAYX,EAAOW,SACxB,qBAAK3E,UAAU,gBAAf,SAAgCgE,EAAOW,WACvC,UAKZ,cAACrB,EAAA,EAAD,CAAKtD,UAAW,8BAA+BsE,WAAS,EAAxD,SACI,cAACZ,EAAA,EAAD,CAAKD,GAAI,EAAGzD,UAAU,gCAAtB,SAEI,cAAC,EAAD,CACIU,QAAS,UACTG,MAAO,SACPF,OAAO,EACPL,QAAS8D,mBAUzC,cAACV,EAAA,EAAD,CAAKD,GAAI,EAAGE,GAAI,WC2BjBsB,MAzHf,WACI,IAAQ9D,EAAaC,sBAAbD,SACR,SAAS+D,EAAcrD,GACnBW,QAAQC,IAAIZ,EAAOsD,OACH,WACZ,IAAIR,EAAWI,aAAaK,QAAQ,YACpC,OAAO,IAAItD,IAAY,CACnBC,SAAS4C,EACT3C,KAAMC,KAIdoD,GAAUC,gBAAgBzD,EAAOsD,KAAMtD,EAAOF,SAAU,CACpDW,UAAW,SAAAC,GACTC,QAAQC,IAAI,aAAcF,GAC1BO,OAAOC,SAASC,KAAO,UAEzBC,UAAW,SAAA4B,GACP1D,EAAS0D,EAAI1B,QAAS,CAClBP,WAAY,QACZQ,aAAa,OAM7B,OACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKtD,UAAU,yBAAf,SACI,qBAAKA,UAAU,iBAAiBuD,IAAKC,MAEzC,eAACF,EAAA,EAAD,CAAKG,GAAI,GAAT,UACI,cAACC,EAAA,EAAD,CAAKD,GAAI,EAAGzD,UAAU,mBAAmB2D,GAAI,EAA7C,SACI,sBAAK3D,UAAU,iBAAf,UACI,cAACsD,EAAA,EAAD,CAAKtD,UAAU,8BAAf,SACI,oBAAIA,UAAU,QAAd,+BAEJ,cAAC,IAAD,CACI4D,cAAe,CAAEuB,KAAM,GAAGxD,SAAU,IAEpCkC,oBAAoB,EACpBC,SAAQ,uCAAE,WAAOjC,GAAP,SAAAkC,EAAA,sDACNmB,EAAcrD,GADR,2CAAF,sDAJZ,SAOK,gBACGA,EADH,EACGA,OACAmC,EAFH,EAEGA,OACAC,EAHH,EAGGA,QACAC,EAJH,EAIGA,aACAC,EALH,EAKGA,WACAC,EANH,EAMGA,aANH,EAOGC,aAPH,OASG,qCACI,cAACf,EAAA,EAAD,CAAKtD,UAAU,yBAAyBsE,WAAS,EAAjD,SACI,eAACZ,EAAA,EAAD,CAAKD,GAAI,EAAT,UACI,cAAC,EAAD,CACI9D,YAAa,mBACbQ,KAAM,WACND,SAAU,OACVH,KAAK,OACLH,SAAUsE,EACVrE,OAAQsE,EACR1E,MAAOoC,EAAOsD,KACdnF,UAAWiE,EAAQkB,MAAQnB,EAAOmB,KAAO,QAAU,KACnDrF,QAAS,SAACyE,GAAD,OAAqB,KAAdA,EAAEC,QAAiBJ,IAAiB,QAEvDH,EAAQkB,MAAQnB,EAAOmB,KACpB,qBAAKnF,UAAU,gBAAf,SAAgCgE,EAAOmB,OACvC,UAKZ,cAAC7B,EAAA,EAAD,CAAKtD,UAAU,yBAAyBsE,WAAS,EAAjD,SACI,eAACZ,EAAA,EAAD,CAAKD,GAAI,EAAT,UACI,cAAC,EAAD,CACI9D,YAAa,uBACbQ,KAAM,WACND,SAAU,OACVH,KAAK,WACLH,SAAUsE,EACVrE,OAAQsE,EACR1E,MAAOoC,EAAOF,SACd3B,UAAWiE,EAAQtC,UAAYqC,EAAOrC,SAAW,QAAU,KAC3D7B,QAAS,SAACyE,GAAD,OAAqB,KAAdA,EAAEC,QAAiBJ,IAAiB,QAEvDH,EAAQtC,UAAYqC,EAAOrC,SACxB,qBAAK3B,UAAU,gBAAf,SAAgCgE,EAAOrC,WACvC,UAOZ,cAAC2B,EAAA,EAAD,CAAKtD,UAAW,8BAA+BsE,WAAS,EAAxD,SACI,cAACZ,EAAA,EAAD,CAAKD,GAAI,EAAGzD,UAAU,gCAAtB,SAEI,cAAC,EAAD,CACIU,QAAS,UACTG,MAAO,SACPF,OAAO,EACPL,QAAS8D,mBAYzC,cAACV,EAAA,EAAD,CAAKD,GAAI,EAAGE,GAAI,W,kBC7HjB,MAA0B,mCCoM1B4B,MA3Lf,WAEE,OACE,eAAClC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKtD,UAAU,8BAAf,SACE,mBAAGgD,KAAK,UAAR,SACE,qBAAKhD,UAAU,iBAAiBuD,IAAKC,QAGzC,cAACF,EAAA,EAAD,CAAKG,GAAI,GAAIzD,UAAU,YAAvB,SACE,cAAC0D,EAAA,EAAD,CAAKD,GAAI,GAAIzD,UAAU,mBAAmB2D,GAAI,EAA9C,SACE,sBAAK6B,MAAM,iBAAX,UACE,eAAClC,EAAA,EAAD,CAAKtD,UAAU,8BAAf,UACE,oBAAIA,UAAU,QAAd,0BACA,mBAAGA,UAAU,cAAb,qIAEF,cAAC,IAAD,CACE4D,cAAe,CAAE6B,OAAQ,IAEzB5B,oBAAoB,EAHtB,SAKG,gBACChC,EADD,EACCA,OACAmC,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aAND,EAOCC,aAPD,OASC,qCACE,cAACf,EAAA,EAAD,CAAKtD,UAAU,yBAAyBsE,WAAS,EAAjD,SACE,cAACZ,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAAC,EAAD,CACE9D,YAAa,SACbO,SAAU,OACVH,KAAK,SACLH,SAAUsE,EACVrE,OAAQsE,EACR1E,MAAOoC,EAAOL,MACdxB,UAAWiE,EAAQzC,OAASwC,EAAOxC,MAAQ,QAAU,KACrD1B,QAAS,SAACyE,GAAD,OAAqB,KAAdA,EAAEC,QAAiBJ,IAAiB,YAM1D,cAACd,EAAA,EAAD,CAAKtD,UAAW,8BAA+BsE,WAAS,EAAxD,SACE,cAACZ,EAAA,EAAD,CAAKD,GAAI,EAAGzD,UAAU,gCAAtB,SACE,cAAC,EAAD,CACEU,QAAS,UACTG,MAAO,SACPF,OAAO,cAUnB,eAAC2C,EAAA,EAAD,CAAKtD,UAAU,aAAf,UACE,cAAC0D,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,mBAAGT,KAAK,iBAAR,SACE,cAAC0C,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,eAACrC,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAACmC,EAAA,EAAD,CAAOrC,IAAKsC,EAAUC,eAAa,MAErC,eAACpC,EAAA,EAAD,CAAKD,GAAI,GAAT,UACE,cAACiC,EAAA,EAAKK,KAAN,6BAGA,cAACL,EAAA,EAAKM,MAAN,8DAOZ,cAACtC,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,mBAAGT,KAAK,iBAAR,SACE,cAAC0C,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,eAACrC,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAACmC,EAAA,EAAD,CAAOrC,IAAKsC,EAAUC,eAAa,MAErC,eAACpC,EAAA,EAAD,CAAKD,GAAI,GAAT,UACE,cAACiC,EAAA,EAAKK,KAAN,6BAGA,cAACL,EAAA,EAAKM,MAAN,8DAOZ,cAACtC,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,mBAAGT,KAAK,iBAAR,SACE,cAAC0C,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,eAACrC,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAACmC,EAAA,EAAD,CAAOrC,IAAKsC,EAAUC,eAAa,MAErC,eAACpC,EAAA,EAAD,CAAKD,GAAI,GAAT,UACE,cAACiC,EAAA,EAAKK,KAAN,6BAGA,cAACL,EAAA,EAAKM,MAAN,8DAOZ,cAACtC,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,mBAAGT,KAAK,iBAAR,SACE,cAAC0C,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,eAACrC,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAACmC,EAAA,EAAD,CAAOrC,IAAKsC,EAAUC,eAAa,MAErC,eAACpC,EAAA,EAAD,CAAKD,GAAI,GAAT,UACE,cAACiC,EAAA,EAAKK,KAAN,6BAGA,cAACL,EAAA,EAAKM,MAAN,8DAOZ,cAACtC,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,mBAAGT,KAAK,iBAAR,SACE,cAAC0C,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,eAACrC,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAACmC,EAAA,EAAD,CAAOrC,IAAKsC,EAAUC,eAAa,MAErC,eAACpC,EAAA,EAAD,CAAKD,GAAI,GAAT,UACE,cAACiC,EAAA,EAAKK,KAAN,6BAGA,cAACL,EAAA,EAAKM,MAAN,8DAOZ,cAACtC,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,mBAAGT,KAAK,iBAAR,SACE,cAAC0C,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,eAACrC,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAACmC,EAAA,EAAD,CAAOrC,IAAKsC,EAAUC,eAAa,MAErC,eAACpC,EAAA,EAAD,CAAKD,GAAI,GAAT,UACE,cAACiC,EAAA,EAAKK,KAAN,6BAGA,cAACL,EAAA,EAAKM,MAAN,4E,kBCzFXC,MApFf,WACI,OACI,eAAC5C,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKtD,UAAU,8BAAf,SACI,mBAAGgD,KAAK,UAAR,SACI,qBAAKhD,UAAU,iBAAiBuD,IAAKC,QAG7C,cAACF,EAAA,EAAD,CAAKG,GAAI,GAAIzD,UAAU,YAAvB,SACI,cAAC0D,EAAA,EAAD,CAAKD,GAAI,GAAIzD,UAAU,mBAAmB2D,GAAI,EAA9C,SACI,sBAAK6B,MAAM,iBAAX,UACI,eAAClC,EAAA,EAAD,CAAKtD,UAAU,8BAAf,UACI,oBAAIA,UAAU,QAAd,0BACA,mBAAGA,UAAU,cAAb,qIAEJ,cAACsD,EAAA,EAAD,CAAKtD,UAAU,0BAAf,SACI,cAAC0D,EAAA,EAAD,CAAKD,GAAI,EAAT,SACI,eAACiC,EAAA,EAAD,CAAM1F,UAAU,wBAAhB,UACI,eAAC0F,EAAA,EAAKQ,OAAN,WAAa,cAACN,EAAA,EAAD,CAAOrC,IAAKsC,EAAUC,eAAa,IAAhD,QAEA,eAACJ,EAAA,EAAKC,KAAN,WACI,cAACQ,EAAA,EAAD,CAAOC,YAAU,EAAjB,SACI,kCACI,+BACI,uBACA,gDACA,8CAEJ,+BACI,oCAAM,wBAAQpG,UAAU,OAAlB,wBACN,6DACA,6BAAI,cAACqG,EAAA,EAAWC,SAAZ,SAER,+BACI,6BAAI,wBAAQtG,UAAU,OAAlB,qBACJ,mDACA,6BAAI,cAACqG,EAAA,EAAWC,SAAZ,CAAqBC,SAAO,SAEpC,+BACI,oCAAM,wBAAQvG,UAAU,OAAlB,wBACN,0CACA,6BAAI,cAACqG,EAAA,EAAWC,SAAZ,CAAqBC,SAAO,SAEpC,+BACI,oCAAM,wBAAQvG,UAAU,OAAlB,sBACN,6DACA,6BAAI,cAACqG,EAAA,EAAWC,SAAZ,CAAqBC,SAAO,cAK5C,eAACjD,EAAA,EAAD,CAAKtD,UAAW,8BAA+BsE,WAAS,EAAxD,UACI,cAACZ,EAAA,EAAD,CAAKD,GAAI,EAAGzD,UAAU,mCAAtB,SACI,mBAAGgD,KAAK,UAAR,SACI,cAAC,EAAD,CACItC,QAAS,SACTG,MAAO,SACPF,OAAO,QAInB,cAAC+C,EAAA,EAAD,CAAKD,GAAI,EAAGzD,UAAU,8BAAtB,SACI,mBAAGgD,KAAK,cAAR,SACI,cAAC,EAAD,CACItC,QAAS,UACTG,MAAO,WACPF,OAAO,gC,SC2FhD6F,MA7Jf,WACI,OACI,eAACnD,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKtD,UAAU,8BAAf,SACI,mBAAGgD,KAAK,UAAR,SACI,qBAAKhD,UAAU,iBAAiBuD,IAAKC,QAG7C,cAACF,EAAA,EAAD,CAAKG,GAAI,GAAIzD,UAAU,YAAvB,SACI,cAAC0D,EAAA,EAAD,CAAKD,GAAI,GAAIzD,UAAU,mBAAmB2D,GAAI,EAA9C,SACI,sBAAK6B,MAAM,iBAAX,UACI,eAAClC,EAAA,EAAD,CAAKtD,UAAU,8BAAf,UACI,oBAAIA,UAAU,QAAd,uBACA,mBAAGA,UAAU,cAAb,qIAEJ,cAACsD,EAAA,EAAD,CAAKtD,UAAU,0BAAf,SACI,cAAC0D,EAAA,EAAD,CAAKD,GAAI,GAAT,SACI,eAACiC,EAAA,EAAD,CAAM1F,UAAU,4BAAhB,UAEI,cAACqD,EAAA,EAAD,UACI,eAAC,IAAD,CAAMrD,UAAU,YAAhB,UACI,sBAAKA,UAAU,qBAAf,UACI,cAACsD,EAAA,EAAD,CAAKtD,UAAU,OAAf,SACI,cAAC0D,EAAA,EAAD,UAAK,gDAET,cAACJ,EAAA,EAAD,CAAKtD,UAAU,OAAf,SACI,cAAC0D,EAAA,EAAD,qIAEJ,eAACJ,EAAA,EAAD,WACI,cAACI,EAAA,EAAD,CAAKD,GAAI,EAAT,SACI,cAAC,IAAKgD,MAAN,CAAYzG,UAAU,OAAO0G,UAAU,oBAAvC,SACI,cAAC,IAAKC,MAAN,CAAYjH,KAAK,QAAQK,KAAK,QAAQ6G,MAAM,8BAGpD,cAAClD,EAAA,EAAD,CAAKD,GAAI,EAAT,SACI,cAAC,IAAKgD,MAAN,CAAYzG,UAAU,OAAO0G,UAAU,oBAAvC,SACI,cAAC,IAAKC,MAAN,CAAYjH,KAAK,QAAQK,KAAK,QAAQ6G,MAAM,iCAIxD,eAACtD,EAAA,EAAD,WACI,cAACI,EAAA,EAAD,CAAKD,GAAI,EAAT,SACI,cAAC,IAAKgD,MAAN,CAAYzG,UAAU,OAAO0G,UAAU,oBAAvC,SACI,cAAC,IAAKC,MAAN,CAAYjH,KAAK,QAAQK,KAAK,QAAQ6G,MAAM,8BAGpD,cAAClD,EAAA,EAAD,CAAKD,GAAI,EAAT,SACI,cAAC,IAAKgD,MAAN,CAAYzG,UAAU,OAAO0G,UAAU,oBAAvC,SACI,cAAC,IAAKC,MAAN,CAAYjH,KAAK,QAAQK,KAAK,QAAQ6G,MAAM,oCAM5D,sBAAK5G,UAAU,0BAAf,UACI,cAACsD,EAAA,EAAD,CAAKtD,UAAU,OAAf,SACI,cAAC0D,EAAA,EAAD,UAAK,gDAET,cAACJ,EAAA,EAAD,CAAKtD,UAAU,OAAf,SACI,cAAC0D,EAAA,EAAD,qIAEJ,eAACJ,EAAA,EAAD,WACI,cAACI,EAAA,EAAD,CAAKD,GAAI,EAAT,SACI,cAAC,IAAKgD,MAAN,CAAYzG,UAAU,OAAO0G,UAAU,oBAAvC,SACI,cAAC,IAAKC,MAAN,CAAYjH,KAAK,QAAQK,KAAK,SAAS6G,MAAM,8BAGrD,cAAClD,EAAA,EAAD,CAAKD,GAAI,EAAT,SACI,cAAC,IAAKgD,MAAN,CAAYzG,UAAU,OAAO0G,UAAU,oBAAvC,SACI,cAAC,IAAKC,MAAN,CAAYjH,KAAK,QAAQK,KAAK,SAAS6G,MAAM,iCAIzD,eAACtD,EAAA,EAAD,WACI,cAACI,EAAA,EAAD,CAAKD,GAAI,EAAT,SACI,cAAC,IAAKgD,MAAN,CAAYzG,UAAU,OAAO0G,UAAU,oBAAvC,SACI,cAAC,IAAKC,MAAN,CAAYjH,KAAK,QAAQK,KAAK,SAASwG,SAAO,EAACK,MAAM,8BAG7D,cAAClD,EAAA,EAAD,CAAKD,GAAI,EAAT,SACI,cAAC,IAAKgD,MAAN,CAAYzG,UAAU,OAAO0G,UAAU,oBAAvC,SACI,cAAC,IAAKC,MAAN,CAAYjH,KAAK,QAAQK,KAAK,SAAS6G,MAAM,oCAM7D,sBAAK5G,UAAU,0BAAf,UACI,cAACsD,EAAA,EAAD,CAAKtD,UAAU,OAAf,SACI,cAAC0D,EAAA,EAAD,UAAK,gDAET,cAACJ,EAAA,EAAD,CAAKtD,UAAU,OAAf,SACI,cAAC0D,EAAA,EAAD,qIAEJ,eAACJ,EAAA,EAAD,WACI,cAACI,EAAA,EAAD,CAAKD,GAAI,EAAT,SACI,cAAC,IAAKgD,MAAN,CAAYzG,UAAU,OAAO0G,UAAU,oBAAvC,SACI,cAAC,IAAKC,MAAN,CAAYjH,KAAK,QAAQK,KAAK,QAAQ6G,MAAM,8BAGpD,cAAClD,EAAA,EAAD,CAAKD,GAAI,EAAT,SACI,cAAC,IAAKgD,MAAN,CAAYzG,UAAU,OAAO0G,UAAU,oBAAvC,SACI,cAAC,IAAKC,MAAN,CAAYjH,KAAK,QAAQK,KAAK,QAAQ6G,MAAM,iCAIxD,eAACtD,EAAA,EAAD,WACI,cAACI,EAAA,EAAD,CAAKD,GAAI,EAAT,SACI,cAAC,IAAKgD,MAAN,CAAYzG,UAAU,OAAO0G,UAAU,oBAAvC,SACI,cAAC,IAAKC,MAAN,CAAYjH,KAAK,QAAQK,KAAK,QAAQwG,SAAO,EAACK,MAAM,8BAG5D,cAAClD,EAAA,EAAD,CAAKD,GAAI,EAAT,SACI,cAAC,IAAKgD,MAAN,CAAYzG,UAAU,OAAO0G,UAAU,oBAAvC,SACI,cAAC,IAAKC,MAAN,CAAYjH,KAAK,QAAQK,KAAK,QAAQ6G,MAAM,yCASpE,cAAClB,EAAA,EAAKC,KAAN,UACI,eAACrC,EAAA,EAAD,CAAKtD,UAAW,8BAA+BsE,WAAS,EAAxD,UACI,cAACZ,EAAA,EAAD,CAAKD,GAAI,EAAGzD,UAAU,mCAAtB,SACI,mBAAGgD,KAAK,UAAR,SACI,cAAC,EAAD,CACItC,QAAS,SACTG,MAAO,SACPF,OAAO,QAInB,cAAC+C,EAAA,EAAD,CAAKD,GAAI,EAAGzD,UAAU,8BAAtB,SACI,mBAAGgD,KAAK,iBAAR,SACI,cAAC,EAAD,CACItC,QAAS,UACTG,MAAO,WACPF,OAAO,+BC9EhDkG,MA7Df,WAKI,OACI,eAACxD,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKtD,UAAU,8BAAf,SACI,mBAAGgD,KAAK,UAAR,SACI,qBAAKhD,UAAU,iBAAiBuD,IAAKC,QAG7C,eAACF,EAAA,EAAD,CAAKG,GAAI,GAAT,UACI,cAACC,EAAA,EAAD,CAAKD,GAAI,EAAGzD,UAAU,mBAAmB2D,GAAI,EAA7C,SACI,sBAAK6B,MAAM,iBAAX,UACI,eAAClC,EAAA,EAAD,CAAKtD,UAAU,8BAAf,UACI,oBAAIA,UAAU,QAAd,0BACA,oBAAIA,UAAU,QAAd,uDAEJ,cAAC,IAAD,CACI4D,cAAe,CAAEpC,MAAO,IAExBqC,oBAAoB,EACpBC,SAAQ,uCAAE,WAAOjC,EAAP,YAAAkC,EAAA,wDAAiB+C,cAAjB,EAAgCC,UApB9DjE,OAAOC,SAASC,KAAO,UAoBO,2CAAF,wDAJZ,SAOK,cACGnB,OADH,EAEGmC,OAFH,EAGGC,QAHH,EAIGC,aAJH,EAKGC,WALH,IAMGC,EANH,EAMGA,aANH,EAOGC,aAPH,OASG,mCAGI,cAACf,EAAA,EAAD,CAAKtD,UAAW,8BAA+BsE,WAAS,EAAxD,SACI,cAACZ,EAAA,EAAD,CAAKD,GAAI,GAAIzD,UAAU,gCAAvB,SAEI,cAAC,EAAD,CACIU,QAAS,UACTG,MAAO,cACPF,OAAO,EACPL,QAAS8D,kBAUzC,cAACV,EAAA,EAAD,CAAKD,GAAI,EAAGE,GAAI,W,mCCzDnBqD,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAgB,gBAGhBC,EAAiB,iBAUjBC,EAAgB,gBAChBC,EAAgB,gBAEhBC,EAAqB,qBACrBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAwB,wBACxBC,GAAyB,yBAMzBC,GAAmB,mBACnBC,GAAmB,mBACnBC,GAAmB,mBAKnBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAuB,uBAMvBC,GAAgB,gBAChBC,GAAgB,gBAChBC,GAAgB,gBAMhBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAwB,wBAMxBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAuB,uBAMvBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAwB,wB,SCvE/BC,GAAQ,cACZC,YAAa,SAACC,EAAK5F,GACM,qBAAZA,EACTX,QAAQC,IAAIsG,GAGZvG,QAAQC,IAAIsG,EAAK5F,IAGrB6F,iBATY,WAUV,IAAMC,EAAclE,aAAaK,QAAQ,sBAEnC8D,EACN,CACE,eAAgB,oBAMlB,OAJID,IACFC,EAAcC,cAAd,iBAAwCF,IAGnCC,GAETE,oBAtBY,WAuBV,IAAMH,EAAclE,aAAaK,QAAQ,sBACnC8D,EACN,CACE,eAAgB,uBAKlB,OAHID,IACFC,EAAcC,cAAd,iBAAwCF,IAEnCC,GAETG,iBAjCY,WAuCV,MALsB,CACpB,cAAgB,UAAhB,OCnCoB,8CDoCpB,eAAgB,sCAKdC,cAzCM,SAyCQC,EAASC,GAAW,OAAD,mHAChCA,IACHA,GAAW,IAAIC,MAAOC,UAAY,QAFC,SAInBC,MAAMJ,GAJa,cAI/BK,EAJ+B,gBAKlBA,EAAIC,OALc,cAK/BA,EAL+B,yBAM9B,IAAIC,KAAK,CAACD,GAAOL,EAAU,CAAE9J,KAAM,eANL,8CAQjCqK,eAjDM,SAiDSC,GAAO,OAAD,yHACjBC,EAAiBD,EAAjBC,OAAQC,EAASF,EAATE,KAGVV,EAAWS,EAAOlK,KAJC,SAKP4J,MAAMO,GALC,cAKnBN,EALmB,gBAMNA,EAAIC,OANE,cAMnBA,EANmB,yBAOlB,IAAIC,KAAK,CAACD,GAAOL,EAAU,CAAE9J,KAAMuK,EAAOvK,QAPxB,8CAS3ByK,UA1DY,SA0DFpB,EAAKtJ,GACQ,kBAAVA,IACTA,EAAQiD,KAAKC,UAAUlD,IAEzBsF,aAAaC,QAAQ+D,EAAKtJ,IAE5B2K,aAhEY,SAgECrB,GACX,IAAItJ,EAAQsF,aAAaK,QAAQ2D,GAIjC,OAHItJ,IACFA,EAAQiD,KAAK2H,MAAM5K,IAEdA,GAET6K,WAvEY,SAuEDC,GACT,IAAMC,EAAgB,IAAIf,KAAKc,GACzBE,EAAOD,EAAcE,UACrBC,EAAQ,CAAC,MAAO,MAAO,QAAS,QAAS,MAAO,MAAO,OAAQ,MAAO,OAAQ,MAAO,MAAO,OAAOH,EAAcI,YAGvH,MAFiB,UAAMD,EAAN,YAAeF,GAAf,OAAsBI,KAAKC,IAAIL,GAAMM,MAArC,aAA+CP,EAAcQ,gBAIhFC,YA/EY,SA+EAV,GACV,IAAMC,EAAgB,IAAIf,KAAKc,GACzBE,EAAOD,EAAcE,UAErBC,EAAQ,CAAC,MAAO,MAAO,QAAS,QAAS,MAAO,MAAO,OAAQ,MAAO,OAAQ,MAAO,MAAO,OAAOH,EAAcI,YACjHM,EAAM,CAAC,MAAO,MAAO,MAAO,MAAO,OAAQ,MAAO,OAAOV,EAAcW,UAG7E,MAFiB,UAAMD,EAAN,aAAcP,EAAd,YAAuBF,GAAvB,OAA8BI,KAAKC,IAAIL,GAAMM,MAA7C,aAAuDP,EAAcQ,gBAIxFF,IAzFY,SAyFRM,GAEF,GAAIA,EAAI,GAAKA,EAAI,GAAI,MAAO,KAC5B,OAAQA,EAAI,IACV,KAAK,EAAG,MAAO,KACf,KAAK,EAAG,MAAO,KACf,KAAK,EAAG,MAAO,KACf,QAAS,MAAO,OAGpBC,aAnGY,SAmGCC,GAIX,IAJyC,IAAtBC,EAAqB,wDACpCC,EAAS,GACTC,EAAaF,EAAc,aAAe,iEAC1CG,EAAmBD,EAAWH,OACzBK,EAAI,EAAGA,EAAIL,EAAQK,IAC1BH,GAAUC,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAEzD,OAAOF,GAETQ,WA5GY,SA4GDC,GACT,MAAiB,kBAANA,EACF,GACIA,EAAEL,OAAO,GAAGM,cAAgBD,EAAEE,MAAM,IAInDC,UAnHY,SAmHFC,GAER,OADAA,EAAOA,EAAKC,QAAQ,QAAS,IACtB,IAAIC,KAAKC,aAAa,QAAS,CACpCnN,MAAO,WACPoN,SAAU,MACVC,sBAAuB,IACtBC,OAAON,IAEZO,oBA3HY,SA2HQnN,EAAOoN,GAIzB,GAHAhE,GAASC,YAAY,SAAUrJ,GAC/BoJ,GAASC,YAAY,iBAAkB+D,IAElCpN,EAAO,OAAOA,EAEnB,IAAMqN,EAAWrN,EAAM6M,QAAQ,SAAU,IAEzC,OADAzD,GAASC,YAAY,aAAcgE,EAASxB,SACvCuB,GAAiBpN,EAAM6L,OAASuB,EAAcvB,OAE7CwB,EAASxB,QAAU,EAAUwB,EAGT,IAApBA,EAASxB,QAMTwB,EAASxB,QAAU,EANU,GAAN,OAAUwB,EAASX,MAAM,EAAG,GAA5B,YAAkCW,EAASX,MAAM,IAStE,GAAN,OAAUW,EAASX,MAAM,EAAG,GAA5B,YAAkCW,EAASX,MAAM,EAAG,GAApD,YAA0DW,EAASX,MAAM,EAAG,UAd9E,GAiBFY,kBApJY,SAoJMtN,GAChB,IAAIuN,EAAUvN,EAAM6M,QAAQ,MAAO,IACjCW,EAAO,CAAE,EAAG,IAAK,EAAG,KAAM,EAAG,OAC/BxN,EAAQ,GACR,IAAK,IAAIkM,EAAI,EAAGA,EAAIqB,EAAQ1B,OAAQK,IAClClM,IAAUwN,EAAKtB,IAAM,IAAMqB,EAAQrB,GAErC,OAAOlM,IA3JG,uBA6JD8K,GACT,IAAMC,EAAgB,IAAIf,KAAKc,GACzBE,EAAOD,EAAcE,UACrBC,EAAQ,CAAC,MAAO,MAAO,QAAS,QAAS,MAAO,MAAO,OAAQ,MAAO,OAAQ,MAAO,MAAO,OAAOH,EAAcI,YAGvH,MAFiB,UAAMD,EAAN,YAAeF,EAAf,aAAwBD,EAAcQ,kBAM5CnC,MEhKTqE,GAAe,CACjBC,aAAcpI,aAAaK,QAAQ,uBACnC6D,YAAa,KACbmE,SAAS,EACTC,KAAM,KACNrJ,OAAQ,ICaNkJ,GAAe,CACjBE,SAAS,EACTpJ,OAAQ,GACRsJ,MAAO,GACPC,OAAQ,GACRC,OAAQ,GACRC,QAAS,GACTC,SAAU,GACVC,MAAO,GACPC,QAAS,GACTC,SAAU,GACVR,KAAK,CACDS,OAAQ,CACJC,MAAO,GACPC,MAAO,IAEXC,QAAS,CACLC,OAAQ,GACRC,MAAO,GACPC,KAAM,GACNC,QAAS,GACTC,MAAO,GACPC,IAAK,IAETC,SAAS,GACTC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,OAAQ,GACRC,OAAQ,GACRC,WAAY,GACZC,YAAa,GACbC,SAAS,EACTC,WAAW,EACXC,WAAW,EACXC,QAAQ,EACRC,SAAS,EACTC,IAAK,GACLC,IAAK,GACLC,QAAS,GACTC,QAAS,GACTC,OAAQ,MCzDVvC,GAAe,CACjBE,SAAS,EACTpJ,OAAQ,GACR0L,SAAU,ICLRC,GAAaC,0BAAgB,CAC/BC,KHaW,WAAyC,IAA/BvB,EAA8B,uDAAtBpB,GAAc4C,EAAQ,uCAE/CpQ,EAEAoQ,EAFApQ,KACAqQ,EACAD,EADAC,QAGJ,OAAQrQ,GACJ,KAAKsH,EACD,OAAO,2BACAsH,GADP,IAEI0B,iBAAiB,EACjB5C,SAAS,IAEjB,KAAKnG,EAID,OAHAlC,aAAaC,QAAQ,sBAAuB+K,EAAQxN,KAAK4K,cACzDpI,aAAaC,QAAQ,qBAAsB+K,EAAQxN,KAAK0G,aAEjD,uCACAqF,GACAyB,EAAQxN,MAFf,IAGIyN,iBAAiB,EACjB5C,SAAS,EACTpJ,OAAQ,GACRiM,SAAU,SAGlB,KAAK/I,EAGD,OADA2B,GAASC,YAAY,UAAWiH,GACzB,2BACAzB,GADP,IAEItK,OAAQ+L,EAAQ/L,OAChBoJ,SAAS,IAEjB,QACI,OAAOkB,IG/Cf4B,MF6DW,WAAyC,IAA/B5B,EAA8B,uDAAtBpB,GAAc4C,EAAQ,uCAE/CpQ,EAEAoQ,EAFApQ,KACAqQ,EACAD,EADAC,QAGJ,OAAQrQ,GACJ,KAAK0H,EACD,OAAO,2BACAkH,GADP,IAEI0B,iBAAiB,EACjB5C,SAAS,IAGjB,KAAK9F,EACD,OAAO,2BACAgH,GADP,IAEIhB,MAAOyC,EAAQxN,KACf6K,SAAS,EACTpJ,OAAQ,KAEhB,KAAKuD,EACD,OAAO,2BACA+G,GADP,IAEIf,OAAQwC,EAAQxN,KAChB6K,SAAS,EACTpJ,OAAQ,KAEhB,KAAKwD,EACD,OAAO,2BACA8G,GADP,IAEId,OAAQuC,EAAQxN,KAChB6K,SAAS,EACTpJ,OAAQ,KAEhB,KAAKyD,EACD,OAAO,2BACA6G,GADP,IAEIb,QAASsC,EAAQxN,KACjB6K,SAAS,EACTpJ,OAAQ,KAEhB,KAAK0D,GACD,OAAO,2BACA4G,GADP,IAEIZ,SAAUqC,EAAQxN,KAClB6K,SAAS,EACTpJ,OAAQ,KAGhB,KAAKqD,EAGD,OADAwB,GAASC,YAAY,UAAWiH,GACzB,2BACAzB,GADP,IAEItK,OAAQ+L,EAAQ/L,OAChBoJ,SAAS,EACT7K,KAAM,KAGd,KAAK0F,GACD,OAAO,2BACAqG,GADP,IAEIlB,SAAS,IAGjB,KAAKlF,GACD,OAAO,2BACAoG,GADP,IAEIX,MAAOoC,EAAQxN,KACf6K,SAAS,EACTpJ,OAAQ,KAEhB,KAAKmE,GACD,OAAO,2BACAmG,GADP,IAEIX,MAAO,GACPP,SAAS,EACTpJ,OAAQ,KAEhB,KAAKoE,GACD,OAAO,2BACAkG,GADP,IAEIlB,SAAS,IAGjB,KAAK/E,GACD,OAAO,2BACAiG,GADP,IAEIV,QAASmC,EAAQxN,KACjB6K,SAAS,EACTpJ,OAAQ,KAEhB,KAAKsE,GACD,OAAO,2BACAgG,GADP,IAEIX,MAAO,GACPP,SAAS,EACTpJ,OAAQ,KAEhB,KAAK8D,GACD,OAAO,2BACAwG,GADP,IAEIlB,SAAS,IAGjB,KAAKrF,GACD,OAAO,2BACAuG,GADP,IAEIT,SAAUkC,EAAQxN,KAClB6K,SAAS,EACTpJ,OAAQ,KAEhB,KAAKgE,GACD,OAAO,2BACAsG,GADP,IAEIT,SAAU,GACVT,SAAS,EACTpJ,OAAQ,KAEhB,KAAK2D,GACD,OAAO,2BACA2G,GADP,IAEIlB,SAAS,IAGjB,KAAKxF,GACD,OAAO,2BACA0G,GADP,IAEIjB,KAAM0C,EAAQxN,KACd6K,SAAS,EACTpJ,OAAQ,KAEhB,KAAK6D,GACD,OAAO,2BACAyG,GADP,IAEIT,SAAU,GACVT,SAAS,EACTpJ,OAAQ,KAEhB,QACI,OAAOsK,IEzMfoB,SDMW,WAAyC,IAA/BpB,EAA8B,uDAAtBpB,GAAc4C,EAAQ,uCAE/CpQ,EAEAoQ,EAFApQ,KACAqQ,EACAD,EADAC,QAGJ,OAAQrQ,GAEJ,KAAK6I,GACD,OAAO,2BACA+F,GADP,IAEIlB,SAAS,IAGjB,KAAK5E,GACD,OAAO,2BACA8F,GADP,IAEIoB,SAAUK,EAAQxN,KAClB6K,SAAS,EACTpJ,OAAQ,KAEhB,KAAKyE,GACD,OAAO,2BACA6F,GADP,IAEIoB,SAAU,GACVtC,SAAS,EACTpJ,OAAQ,KAGhB,KAAK0E,GACD,OAAO,2BACA4F,GADP,IAEIlB,SAAS,IAGjB,KAAKzE,GAML,KAAKC,GACD,OAAO,2BACA0F,GADP,IAEIlB,SAAS,EACTpJ,OAAQ,KAEhB,QACI,OAAOsK,MC3CJ6B,GARK,SAAC7B,EAAOwB,GAMxB,MAJI,CAAC3I,GAAgBiJ,SAASN,EAAOpQ,QAClC4O,OAAQ+B,GAGJV,GAAWrB,EAAOwB,ICfvBQ,GAAa,CAACC,KAEdC,GAAQC,sBACVN,GACAO,8BACIC,kBAAe,WAAf,EAAmBL,MC4B3BM,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,gBAAD,CAAeM,OAAQ,CACrBC,UAAW,SAACC,GAAD,mBAAC,eAAmBA,GAApB,IAA8BC,OAAQ,OAAQC,IAAK,OADhE,SAGE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOhH,KAAK,SAASiH,UAAWjQ,IAChC,cAAC,IAAD,CAAOgJ,KAAK,UAAUiH,UAAW1M,IACjC,cAAC,IAAD,CAAOyF,KAAK,mBAAmBiH,UAAWlM,IAC1C,cAAC,IAAD,CAAOiF,KAAK,SAASiH,UAAW5L,IAChC,cAAC,IAAD,CAAO2E,KAAK,gBAAgBiH,UAAWC,IACvC,cAAC,IAAD,CAAOlH,KAAK,aAAaiH,UAAW3K,IACpC,cAAC,IAAD,CAAO0D,KAAK,gBAAgBiH,UAAWtK,IACvC,cAAC,IAAD,CAAUwK,KAAK,IAAIC,GAAG,oBAM9BC,SAASC,eAAe,W","file":"static/js/main.c7da16a4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.596d2f9e.png\";","import React from 'react'\nimport FontAwesome from 'react-fontawesome'\nimport { Form, Icon, Input } from 'semantic-ui-react';\n\nfunction SemanticInput(props) {\n  \n   \n  return (\n\n    <Form.Field   style={{ width: '100%' }}>\n      <Input\n        \n        style={props.formStyles ? props.formStyles : { width: '100%' }}\n        value={props.value}\n        type={props.type ? props.type : \"text\"}\n        placeholder={props.placeholder}\n        onChange={props.onChange ? props.onChange : null}\n        onBlur={props.onBlur ? props.onBlur : null}\n        onKeyUp={props.onKeyUp ? props.onKeyUp : null}\n        name={props.name}\n        className={props.className}\n        iconPosition={props.position}\n        icon={props.icon?\n          <Icon\n            name={props.icon}\n            link\n            onClick={()=>props.onIcon?props.onIcon():null}\n            \n          />:\n          null\n        }\n       \n      />\n    </Form.Field>\n\n  )\n}\n\nexport default SemanticInput","import React from 'react'\nimport { Button } from 'react-bootstrap'\n\nfunction ButtonView(props){\n  return(\n    <Button \n      variant={props.variant}\n      style={props.style}\n      block={props.block}\n      disabled={props.disabled?props.disabled:false}\n      onClick={()=>props.onClick?props.onClick():null}\n      >\n      {props.title}\n     </Button>\n  )\n}\n\nexport default ButtonView","import{ CognitoUserPool } from \"amazon-cognito-identity-js\";\n\nconst poolData={\n    UserPoolId: \"us-east-2_BhxYrS22b\",\n    ClientId: \"3hqarjn19erj26noi5bv7ok91v\",\n    region:\"us-east-2\"\n}\n\n\nexport default new CognitoUserPool(poolData)","import React, { useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Formik } from 'formik'\nimport logo from \"assets/img/logo.png\";\nimport * as Yup from 'yup'\nimport SemanticInput from 'components/SemanticInput';\nimport ButtonView from 'components/Button'\nimport { useToasts } from 'react-toast-notifications';\nimport { CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\";\nimport UserPool from \"../UserPool\";\n\nfunction Login() {\n    const { addToast } = useToasts()\n    const validationSchema = Yup.object().shape({\n        email: Yup.string()\n            .email(\"Enter  valid email address\")\n            .max(100, \"Email must be less than 100 characters\")\n            .required(\"Email is required\"),\n        password: Yup.string()\n            .required(\"Password is required\")\n    });\n\n    function loginUser(values) {\n\n        const email = new CognitoUser({\n            Username: values.email,\n            Pool: UserPool,\n        });\n\n        const authDetails = new AuthenticationDetails({\n            Username: values.email,\n            Password: values.password,\n        });\n\n        email.authenticateUser(authDetails, {\n            onSuccess: (data) => {\n                console.log(JSON.stringify(data))\n                addToast(\"Login Success\", { appearance: 'success' });\n                console.log(data.idToken)\n                window.location.href = '#users'\n            },\n            onFailure: (error) => {\n                addToast(error.message, {\n                    appearance: 'error',\n                    autoDismiss: true\n                });\n            },\n        });\n    }\n\n    return (\n        <Container >\n            <Row className=\"justify-content-center\">\n                <img className=\"img-fluid logo\" src={logo} />\n            </Row>\n            <Row md={12}>\n                <Col md={8} className=\"mt-3 offset-md-2\" sm={6}>\n                    <div className=\"dash-container\">\n                        <Row className=\"justify-content-center mb-5\">\n                            <h2 className=\"text \">Welcome!</h2>\n                            <p className=\"text-center\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore.</p>\n                        </Row>\n                        <Formik\n                            initialValues={{ email: \"\", password: \"\" }}\n                            // Hooks up our validationSchema to Formik \n                            validationSchema={validationSchema}\n                            enableReinitialize={true}\n                            onSubmit={async (values) => {\n                                loginUser(values)\n                            }}>\n                            {({\n                                values,\n                                errors,\n                                touched,\n                                handleChange,\n                                handleBlur,\n                                handleSubmit,\n                                isSubmitting,\n                            }) => (\n                                <>\n                                    <Row className=\"justify-content-center\" noGutters>\n                                        <Col md={9}>\n                                            <SemanticInput\n                                                placeholder={'Enter your email address'}\n                                                icon={'envelope'}\n                                                position={'left'}\n                                                name=\"email\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.email}\n                                                className={touched.email && errors.email ? \"error\" : null}\n                                                onKeyUp={(e) => e.keyCode === 13 ? handleSubmit() : null}\n                                            />\n                                            {touched.email && errors.email ? (\n                                                <div className=\"error-message\">{errors.email}</div>\n                                            ) : null}\n                                        </Col>\n                                        <Col md={9}>\n                                            <SemanticInput\n                                                type={\"password\"}\n                                                placeholder={'Enter your password'}\n                                                icon={'eye'}\n                                                position={'left'}\n                                                name=\"password\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.password}\n                                                className={touched.password && errors.password ? \"error\" : null}\n                                                onKeyUp={(e) => e.keyCode === 13 ? handleSubmit() : null}\n\n\n                                            />\n                                            {touched.password && errors.password ? (\n                                                <div className=\"error-message\">{errors.password}</div>\n                                            ) : null}\n\n                                        </Col>\n                                    </Row>\n                                    <Row className={'justify-content-center pt-2'} noGutters>\n                                        <Col md={9}>\n                                            <a href=\"#/forgot\"><p className=\"text-right font-12\">Forgot your password?</p></a>\n                                        </Col>\n                                    </Row>\n                                    <Row className={'pt-3 justify-content-center'} noGutters>\n                                        <Col md={6} className=\"d-flex justify-content-center\">\n                                            <ButtonView\n                                                variant={'primary'}\n                                                title={'Login'}\n                                                block={true}\n                                                onClick={handleSubmit}\n                                            />\n                                        </Col>\n                                    </Row>\n                                   \n                                </>\n                            )}\n                        </Formik>\n                    </div>\n                </Col>\n                <Col md={2} sm={3} />\n            </Row>\n        </Container>\n    )\n}\n\nexport default Login","import React, { useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Formik } from 'formik'\nimport logo from \"assets/img/logo.png\";\nimport SemanticInput from 'components/SemanticInput';\nimport { useToasts } from 'react-toast-notifications';\nimport ButtonView from 'components/Button'\nimport { CognitoUser } from \"amazon-cognito-identity-js\";\nimport UserPool from \"../UserPool\";\n\nfunction Forgot() {\n    const { addToast } = useToasts()\n    function forgotPass(values) {\n\n        const getUser = () => {\n            return new CognitoUser({\n                Username: values.username,\n                Pool: UserPool\n            });\n        };\n\n        getUser().forgotPassword({\n            onSuccess: data => {\n                window.location.href = '#change-password'\n            },\n            onFailure: err => {\n                console.error(\"onFailure:\", err);\n                addToast(err.message, {\n                    appearance: 'error',\n                    autoDismiss: true\n                });\n            },\n            inputVerificationCode: data => {\n                localStorage.setItem(\"username\",values.username)\n                window.location.href = '#change-password'\n            }\n        });\n    }\n\n    return (\n        <Container >\n            <Row className=\"justify-content-center\">\n                <img className=\"img-fluid logo\" src={logo} />\n            </Row>\n            <Row md={12}>\n                <Col md={8} className=\"mt-3 offset-md-2\" sm={6}>\n                    <div className=\"dash-container\">\n                        <Row className=\"justify-content-center mb-5\">\n                            <h2 className=\"text \">Forgot Password!</h2>\n                        </Row>\n                        <Formik\n                            initialValues={{ email: \"\" }}\n                            // Hooks up our validationSchema to Formik \n                            enableReinitialize={true}\n                            onSubmit={async (values) => {\n                                forgotPass(values)\n                            }}>\n                            {({\n                                values,\n                                errors,\n                                touched,\n                                handleChange,\n                                handleBlur,\n                                handleSubmit,\n                                isSubmitting,\n                            }) => (\n                                <>\n                                    <Row className=\"justify-content-center\" noGutters>\n                                        <Col md={9}>\n                                            <SemanticInput\n                                                placeholder={'Enter your username '}\n                                                icon={'envelope'}\n                                                position={'left'}\n                                                name=\"username\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.username}\n                                                className={touched.username && errors.username ? \"error\" : null}\n                                                onKeyUp={(e) => e.keyCode === 13 ? handleSubmit() : null}\n                                            />\n                                            {touched.username && errors.username ? (\n                                                <div className=\"error-message\">{errors.username}</div>\n                                            ) : null}\n                                        </Col>\n\n                                    </Row>\n\n                                    <Row className={'pt-3 justify-content-center'} noGutters>\n                                        <Col md={6} className=\"d-flex justify-content-center\">\n\n                                            <ButtonView\n                                                variant={'primary'}\n                                                title={'Submit'}\n                                                block={true}\n                                                onClick={handleSubmit}\n                                            />\n\n                                        </Col>\n                                    </Row>\n                                </>\n                            )}\n                        </Formik>\n                    </div>\n                </Col>\n                <Col md={2} sm={3} />\n            </Row>\n        </Container>\n    )\n}\n\nexport default Forgot","import React, { useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Formik } from 'formik'\nimport logo from \"assets/img/logo.png\";\nimport SemanticInput from 'components/SemanticInput';\nimport ButtonView from 'components/Button'\nimport { useToasts } from 'react-toast-notifications';\nimport { CognitoUser } from \"amazon-cognito-identity-js\";\nimport UserPool from \"../UserPool\";\n\nfunction ChangePassword() {\n    const { addToast } = useToasts()\n    function resetPassword(values) {\n        console.log(values.code)\n        const getUser = () => {\n            let username = localStorage.getItem(\"username\");\n            return new CognitoUser({\n                Username:username,\n                Pool: UserPool\n            });\n        };\n\n        getUser().confirmPassword(values.code, values.password, {\n            onSuccess: data => {\n              console.log(\"onSuccess:\", data);\n              window.location.href = '#login'\n            },\n            onFailure: err => {\n                addToast(err.message, {\n                    appearance: 'error',\n                    autoDismiss: true\n                });\n            }\n        });\n    }\n\n    return (\n        <Container >\n            <Row className=\"justify-content-center\">\n                <img className=\"img-fluid logo\" src={logo} />\n            </Row>\n            <Row md={12}>\n                <Col md={8} className=\"mt-3 offset-md-2\" sm={6}>\n                    <div className=\"dash-container\">\n                        <Row className=\"justify-content-center mb-5\">\n                            <h2 className=\"text \">Reset Password!</h2>\n                        </Row>\n                        <Formik\n                            initialValues={{ code: \"\",password: \"\" }}\n                            // Hooks up our validationSchema to Formik \n                            enableReinitialize={true}\n                            onSubmit={async (values) => {\n                                resetPassword(values)\n                            }}>\n                            {({\n                                values,\n                                errors,\n                                touched,\n                                handleChange,\n                                handleBlur,\n                                handleSubmit,\n                                isSubmitting,\n                            }) => (\n                                <>\n                                    <Row className=\"justify-content-center\" noGutters>\n                                        <Col md={9}>\n                                            <SemanticInput\n                                                placeholder={'Enter your code '}\n                                                icon={'envelope'}\n                                                position={'left'}\n                                                name=\"code\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.code}\n                                                className={touched.code && errors.code ? \"error\" : null}\n                                                onKeyUp={(e) => e.keyCode === 13 ? handleSubmit() : null}\n                                            />\n                                            {touched.code && errors.code ? (\n                                                <div className=\"error-message\">{errors.code}</div>\n                                            ) : null}\n                                        </Col>\n\n                                    </Row>\n\n                                    <Row className=\"justify-content-center\" noGutters>\n                                        <Col md={9}>\n                                            <SemanticInput\n                                                placeholder={'Enter your password '}\n                                                icon={'envelope'}\n                                                position={'left'}\n                                                name=\"password\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.password}\n                                                className={touched.password && errors.password ? \"error\" : null}\n                                                onKeyUp={(e) => e.keyCode === 13 ? handleSubmit() : null}\n                                            />\n                                            {touched.password && errors.password ? (\n                                                <div className=\"error-message\">{errors.password}</div>\n                                            ) : null}\n                                        </Col>\n\n                                    </Row>\n\n                                  \n\n                                    <Row className={'pt-3 justify-content-center'} noGutters>\n                                        <Col md={6} className=\"d-flex justify-content-center\">\n\n                                            <ButtonView\n                                                variant={'primary'}\n                                                title={'Submit'}\n                                                block={true}\n                                                onClick={handleSubmit}\n                                            />\n\n                                        </Col>\n                                    </Row>\n\n\n                                </>\n                            )}\n                        </Formik>\n                    </div>\n                </Col>\n                <Col md={2} sm={3} />\n            </Row>\n        </Container>\n    )\n}\n\nexport default ChangePassword","export default __webpack_public_path__ + \"static/media/face-2.46afde83.jpg\";","import React, { useEffect } from 'react'\nimport { Container, Row, Col, Card, Image } from 'react-bootstrap'\nimport { Formik } from 'formik'\nimport logo from \"assets/img/logo.png\";\nimport userPics from \"assets/img/faces/face-2.jpg\";\nimport SemanticInput from 'components/SemanticInput';\nimport ButtonView from 'components/Button'\nimport Loader from 'components/Loader'\n\nfunction Users() {\n\n  return (\n    <Container >\n      <Row className=\"justify-content-center mt-5\">\n        <a href=\"#/login\">\n          <img className=\"img-fluid logo\" src={logo} />\n        </a>\n      </Row>\n      <Row md={12} className=\"pb-5 mb-5\">\n        <Col md={10} className=\"mt-5 offset-md-1\" sm={6}>\n          <div class=\"dash-container\">\n            <Row className=\"justify-content-center mb-5\">\n              <h2 className=\"text \">User Search!</h2>\n              <p className=\"text-center\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore.</p>\n            </Row>\n            <Formik\n              initialValues={{ search: \"\" }}\n              // Hooks up our validationSchema to Formik \n              enableReinitialize={true}\n            >\n              {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n              }) => (\n                <>\n                  <Row className=\"justify-content-center\" noGutters>\n                    <Col md={9}>\n                      <SemanticInput\n                        placeholder={'Search'}\n                        position={'left'}\n                        name=\"search\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.email}\n                        className={touched.email && errors.email ? \"error\" : null}\n                        onKeyUp={(e) => e.keyCode === 13 ? handleSubmit() : null}\n                      />\n\n                    </Col>\n                  </Row>\n\n                  <Row className={'pt-3 justify-content-center'} noGutters>\n                    <Col md={6} className=\"d-flex justify-content-center\">\n                      <ButtonView\n                        variant={'primary'}\n                        title={'Search'}\n                        block={true}\n                      // onClick={handleSubmit}\n                      />\n                    </Col>\n                  </Row>\n\n                </>\n              )}\n            </Formik>\n\n            <Row className=\"mt-5 users\">\n              <Col md={6}>\n                <a href=\"#/user-details\">\n                  <Card>\n                    <Card.Body>\n                      <Row>\n                        <Col md={2}>\n                          <Image src={userPics} roundedCircle />\n                        </Col>\n                        <Col md={10}>\n                          <Card.Text>\n                            Sophie Garnier\n                                </Card.Text>\n                          <Card.Title>Demo Street, House No 101 123456 </Card.Title>\n                        </Col>\n                      </Row>\n                    </Card.Body>\n                  </Card>\n                </a>\n              </Col>\n              <Col md={6}>\n                <a href=\"#/user-details\">\n                  <Card>\n                    <Card.Body>\n                      <Row>\n                        <Col md={2}>\n                          <Image src={userPics} roundedCircle />\n                        </Col>\n                        <Col md={10}>\n                          <Card.Text>\n                            Sophie Garnier\n                                </Card.Text>\n                          <Card.Title>Demo Street, House No 101 123456 </Card.Title>\n                        </Col>\n                      </Row>\n                    </Card.Body>\n                  </Card>\n                </a>\n              </Col>\n              <Col md={6}>\n                <a href=\"#/user-details\">\n                  <Card>\n                    <Card.Body>\n                      <Row>\n                        <Col md={2}>\n                          <Image src={userPics} roundedCircle />\n                        </Col>\n                        <Col md={10}>\n                          <Card.Text>\n                            Sophie Garnier\n                                </Card.Text>\n                          <Card.Title>Demo Street, House No 101 123456 </Card.Title>\n                        </Col>\n                      </Row>\n                    </Card.Body>\n                  </Card>\n                </a>\n              </Col>\n              <Col md={6}>\n                <a href=\"#/user-details\">\n                  <Card>\n                    <Card.Body>\n                      <Row>\n                        <Col md={2}>\n                          <Image src={userPics} roundedCircle />\n                        </Col>\n                        <Col md={10}>\n                          <Card.Text>\n                            Sophie Garnier\n                                </Card.Text>\n                          <Card.Title>Demo Street, House No 101 123456 </Card.Title>\n                        </Col>\n                      </Row>\n                    </Card.Body>\n                  </Card>\n                </a>\n              </Col>\n              <Col md={6}>\n                <a href=\"#/user-details\">\n                  <Card>\n                    <Card.Body>\n                      <Row>\n                        <Col md={2}>\n                          <Image src={userPics} roundedCircle />\n                        </Col>\n                        <Col md={10}>\n                          <Card.Text>\n                            Sophie Garnier\n                                </Card.Text>\n                          <Card.Title>Demo Street, House No 101 123456 </Card.Title>\n                        </Col>\n                      </Row>\n                    </Card.Body>\n                  </Card>\n                </a>\n              </Col>\n              <Col md={6}>\n                <a href=\"#/user-details\">\n                  <Card>\n                    <Card.Body>\n                      <Row>\n                        <Col md={2}>\n                          <Image src={userPics} roundedCircle />\n                        </Col>\n                        <Col md={10}>\n                          <Card.Text>\n                            Sophie Garnier\n                                </Card.Text>\n                          <Card.Title>Demo Street, House No 101 123456 </Card.Title>\n                        </Col>\n                      </Row>\n                    </Card.Body>\n                  </Card>\n                </a>\n              </Col>\n            </Row>\n          </div>\n\n        </Col>\n      </Row>\n\n    </Container>\n  )\n}\n\nexport default Users","import React, { useEffect } from 'react'\nimport { Container, Row, Col, Card, Image, Table, InputGroup } from 'react-bootstrap'\nimport logo from \"assets/img/logo.png\";\nimport userPics from \"assets/img/faces/face-2.jpg\";\nimport ButtonView from 'components/Button';\n\nfunction UserDetail() {\n    return (\n        <Container >\n            <Row className=\"justify-content-center mt-5\">\n                <a href=\"#/login\">\n                    <img className=\"img-fluid logo\" src={logo} />\n                </a>\n            </Row>\n            <Row md={12} className=\"pb-5 mb-5\">\n                <Col md={10} className=\"mt-5 offset-md-1\" sm={6}>\n                    <div class=\"dash-container\">\n                        <Row className=\"justify-content-center mb-5\">\n                            <h2 className=\"text \">User Details</h2>\n                            <p className=\"text-center\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore.</p>\n                        </Row>\n                        <Row className=\"mt-5 detail offset-md-2\">\n                            <Col md={9}>\n                                <Card className=\"text-center pb-5 pt-2\">\n                                    <Card.Header><Image src={userPics} roundedCircle />  </Card.Header>\n\n                                    <Card.Body>\n                                        <Table responsive>\n                                            <tbody>\n                                                <tr>\n                                                    <th></th>\n                                                    <th>Sophie Garnier</th>\n                                                    <th>Confirmed</th>\n                                                </tr>\n                                                <tr>\n                                                    <td>  <strong className=\"mr-3\">Address</strong></td>\n                                                    <td>  Demo Street, House No 101</td>\n                                                    <td><InputGroup.Checkbox /></td>\n                                                </tr>\n                                                <tr>\n                                                    <td><strong className=\"mr-3\">Phone</strong></td>\n                                                    <td> +1 1234 5678 910</td>\n                                                    <td><InputGroup.Checkbox checked /></td>\n                                                </tr>\n                                                <tr>\n                                                    <td>  <strong className=\"mr-3\">Pincode</strong></td>\n                                                    <td> 132 465</td>\n                                                    <td><InputGroup.Checkbox checked /></td>\n                                                </tr>\n                                                <tr>\n                                                    <td>  <strong className=\"mr-3\">Email</strong></td>\n                                                    <td> SophieGarnier911@gmail.com</td>\n                                                    <td><InputGroup.Checkbox checked /></td>\n                                                </tr>\n\n                                            </tbody>\n                                        </Table>\n                                        <Row className={'pt-3 justify-content-center'} noGutters>\n                                            <Col md={5} className=\"mr-2 mb-3 justify-content-center\">\n                                                <a href=\"#/login\">\n                                                    <ButtonView\n                                                        variant={'danger'}\n                                                        title={'Cancel'}\n                                                        block={true}\n                                                    />\n                                                </a>\n                                            </Col>\n                                            <Col md={5} className=\"ml-2 justify-content-center\">\n                                                <a href=\"#/questions\">\n                                                    <ButtonView\n                                                        variant={'primary'}\n                                                        title={'Continue'}\n                                                        block={true}\n                                                    />\n                                                </a>\n                                            </Col>\n                                        </Row>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </div>\n\n                </Col>\n            </Row>\n\n        </Container>\n    )\n}\n\nexport default UserDetail","import React, { useEffect } from 'react'\nimport { Container, Row, Col, Card, Form, FormControl, InputGroup } from 'react-bootstrap'\nimport logo from \"assets/img/logo.png\";\nimport userPics from \"assets/img/faces/face-2.jpg\";\nimport ButtonView from 'components/Button';\n\nfunction Questions() {\n    return (\n        <Container >\n            <Row className=\"justify-content-center mt-5\">\n                <a href=\"#/login\">\n                    <img className=\"img-fluid logo\" src={logo} />\n                </a>\n            </Row>\n            <Row md={12} className=\"pb-5 mb-5\">\n                <Col md={10} className=\"mt-5 offset-md-1\" sm={6}>\n                    <div class=\"dash-container\">\n                        <Row className=\"justify-content-center mb-5\">\n                            <h2 className=\"text \">Questions</h2>\n                            <p className=\"text-center\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore.</p>\n                        </Row>\n                        <Row className=\"mt-5 detail offset-md-1\">\n                            <Col md={11}>\n                                <Card className=\"text-center p-md-5 p-sm-2\">\n\n                                    <Container>\n                                        <Form className=\"text-left\">\n                                            <div className=\"border-bottom pb-3\">\n                                                <Row className=\"mb-3\">\n                                                    <Col><h5>Question 1</h5></Col>\n                                                </Row>\n                                                <Row className=\"mb-3\">\n                                                    <Col>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore.</Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col md={6}>\n                                                        <Form.Group className=\"mb-2\" controlId=\"formBasicCheckbox\">\n                                                            <Form.Check type=\"radio\" name=\"first\" label=\"Lorem ipsum dolor sit\" />\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col md={6}>\n                                                        <Form.Group className=\"mb-2\" controlId=\"formBasicCheckbox\">\n                                                            <Form.Check type=\"radio\" name=\"first\" label=\"Lorem ipsum dolor sit\" />\n                                                        </Form.Group>\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col md={6}>\n                                                        <Form.Group className=\"mb-2\" controlId=\"formBasicCheckbox\">\n                                                            <Form.Check type=\"radio\" name=\"first\" label=\"Lorem ipsum dolor sit\" />\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col md={6}>\n                                                        <Form.Group className=\"mb-2\" controlId=\"formBasicCheckbox\">\n                                                            <Form.Check type=\"radio\" name=\"first\" label=\"Lorem ipsum dolor sit\" />\n                                                        </Form.Group>\n                                                    </Col>\n                                                </Row>\n\n                                            </div>\n                                            <div className=\"border-bottom pb-3 mt-5\">\n                                                <Row className=\"mb-3\">\n                                                    <Col><h5>Question 2</h5></Col>\n                                                </Row>\n                                                <Row className=\"mb-3\">\n                                                    <Col>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore.</Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col md={6}>\n                                                        <Form.Group className=\"mb-2\" controlId=\"formBasicCheckbox\">\n                                                            <Form.Check type=\"radio\" name=\"second\" label=\"Lorem ipsum dolor sit\" />\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col md={6}>\n                                                        <Form.Group className=\"mb-2\" controlId=\"formBasicCheckbox\">\n                                                            <Form.Check type=\"radio\" name=\"second\" label=\"Lorem ipsum dolor sit\" />\n                                                        </Form.Group>\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col md={6}>\n                                                        <Form.Group className=\"mb-2\" controlId=\"formBasicCheckbox\">\n                                                            <Form.Check type=\"radio\" name=\"second\" checked label=\"Lorem ipsum dolor sit\" />\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col md={6}>\n                                                        <Form.Group className=\"mb-2\" controlId=\"formBasicCheckbox\">\n                                                            <Form.Check type=\"radio\" name=\"second\" label=\"Lorem ipsum dolor sit\" />\n                                                        </Form.Group>\n                                                    </Col>\n                                                </Row>\n\n                                            </div>\n                                            <div className=\"border-bottom pb-3 mt-5\">\n                                                <Row className=\"mb-3\">\n                                                    <Col><h5>Question 3</h5></Col>\n                                                </Row>\n                                                <Row className=\"mb-3\">\n                                                    <Col>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore.</Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col md={6}>\n                                                        <Form.Group className=\"mb-2\" controlId=\"formBasicCheckbox\">\n                                                            <Form.Check type=\"radio\" name=\"third\" label=\"Lorem ipsum dolor sit\" />\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col md={6}>\n                                                        <Form.Group className=\"mb-2\" controlId=\"formBasicCheckbox\">\n                                                            <Form.Check type=\"radio\" name=\"third\" label=\"Lorem ipsum dolor sit\" />\n                                                        </Form.Group>\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col md={6}>\n                                                        <Form.Group className=\"mb-2\" controlId=\"formBasicCheckbox\">\n                                                            <Form.Check type=\"radio\" name=\"third\" checked label=\"Lorem ipsum dolor sit\" />\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col md={6}>\n                                                        <Form.Group className=\"mb-2\" controlId=\"formBasicCheckbox\">\n                                                            <Form.Check type=\"radio\" name=\"third\" label=\"Lorem ipsum dolor sit\" />\n                                                        </Form.Group>\n                                                    </Col>\n                                                </Row>\n\n                                            </div>\n                                        </Form>\n                                    </Container>\n\n                                    <Card.Body>\n                                        <Row className={'pt-3 justify-content-center'} noGutters>\n                                            <Col md={3} className=\"mr-2 mb-3 justify-content-center\">\n                                                <a href=\"#/login\">\n                                                    <ButtonView\n                                                        variant={'danger'}\n                                                        title={'Cancel'}\n                                                        block={true}\n                                                    />\n                                                </a>\n                                            </Col>\n                                            <Col md={3} className=\"ml-2 justify-content-center\">\n                                                <a href=\"#/confirmation\">\n                                                    <ButtonView\n                                                        variant={'primary'}\n                                                        title={'Continue'}\n                                                        block={true}\n                                                    />\n                                                </a>\n                                            </Col>\n                                        </Row>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </div>\n\n                </Col>\n            </Row>\n\n        </Container>\n    )\n}\n\nexport default Questions","import React, { useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Formik } from 'formik'\nimport logo from \"assets/img/logo.png\";\nimport ButtonView from 'components/Button';\n\nfunction Confirmation() {\n\n    function loginUser(values) {\n        window.location.href = '#/users'\n    }\n    return (\n        <Container >\n            <Row className=\"justify-content-center mt-5\">\n                <a href=\"#/login\">\n                    <img className=\"img-fluid logo\" src={logo} />\n                </a>\n            </Row>\n            <Row md={12}>\n                <Col md={6} className=\"mt-5 offset-md-3\" sm={6}>\n                    <div class=\"dash-container\">\n                        <Row className=\"justify-content-center mb-5\">\n                            <h2 className=\"text \">Confirmation</h2>\n                            <h5 className=\"text \">Bet has been placed for Sophie Garnier</h5>\n                        </Row>\n                        <Formik\n                            initialValues={{ email: \"\" }}\n                            // Hooks up our validationSchema to Formik \n                            enableReinitialize={true}\n                            onSubmit={async (values, { setSubmitting, resetForm }) => {\n                                loginUser(values)\n                            }}>\n                            {({\n                                values,\n                                errors,\n                                touched,\n                                handleChange,\n                                handleBlur,\n                                handleSubmit,\n                                isSubmitting,\n                            }) => (\n                                <>\n\n\n                                    <Row className={'pt-3 justify-content-center'} noGutters>\n                                        <Col md={12} className=\"d-flex justify-content-center\">\n\n                                            <ButtonView\n                                                variant={'primary'}\n                                                title={'Search User'}\n                                                block={true}\n                                                onClick={handleSubmit}\n                                            />\n\n                                        </Col>\n                                    </Row>\n                                </>\n                            )}\n                        </Formik>\n                    </div>\n                </Col>\n                <Col md={2} sm={3} />\n            </Row>\n        </Container>\n    )\n}\n\nexport default Confirmation","/**\n * auth action types\n */\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\n\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\n\nexport const RESET_CODE_REQUEST = 'RESET_CODE_REQUEST';\nexport const RESET_CODE_SUCCESS = 'RESET_CODE_SUCCESS';\nexport const RESET_CODE_FAILURE = 'RESET_CODE_FAILURE';\n\n/**\n * admin request data\n */\nexport const ADMIN_REQUEST = 'ADMIN_REQUEST';\nexport const ADMIN_FAILURE = 'ADMIN_FAILURE';\n\nexport const ADMIN_USER_SUCCESS = 'ADMIN_USER_SUCCESS';\nexport const ADMIN_LEGACY_SUCCESS = 'ADMIN_LEGACY_SUCCESS';\nexport const ADMIN_BURIAL_SUCCESS = 'ADMIN_BURIAL_SUCCESS';\nexport const ADMIN_CHARITY_SUCCESS = 'ADMIN_CHARITY_SUCCESS';\nexport const ADMIN_DONATION_SUCCESS = 'ADMIN_DONATION_SUCCESS';\n\n/**\n * get user profile data\n */\n\nexport const GET_USER_REQUEST = 'GET_USER_REQUEST'\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS'\nexport const GET_USER_FAILURE = 'GET_USER_FAILURE'\n\n/**\n * get memorial request\n */\nexport const GET_MEMORIAL_REQUEST = 'GET_MEMORIAL_REQUEST'\nexport const GET_MEMORIAL_SUCCESS = 'GET_MEMORIAL_SUCCESS'\nexport const GET_MEMORIAL_FAILURE = 'GET_MEMORIAL_FAILURE'\n\n/**\n * get count request\n */\n\nexport const COUNT_REQUEST = 'COUNT_REQUEST';\nexport const COUNT_SUCCESS = 'COUNT_SUCCESS';\nexport const COUNT_FAILURE = 'COUNT_FAILURE';\n\n/**\n * admin profile request\n */\n\nexport const ADMIN_PROFILE_REQUEST = 'ADMIN_PROFILE_REQUEST';\nexport const ADMIN_PROFILE_SUCCESS = 'ADMIN_PROFILE_SUCCESS';\nexport const ADMIN_PROFILE_FAILURE = 'ADMIN_PROFILE_FAILURE';\n\n/**\n * donations requests\n */\n\nexport const GET_DONATION_REQUEST = 'GET_DONATION_REQUEST';\nexport const GET_DONATION_SUCCESS = 'GET_DONATION_SUCCESS';\nexport const GET_DONATION_FAILURE = 'GET_DONATION_FAILURE';\n\n/**\n * send donation request\n */\n\nexport const SEND_DONATION_REQUEST = 'SEND_DONATION_REQUEST';\nexport const SEND_DONATION_SUCCESS = 'SEND_DONATION_SUCCESS';\nexport const SEND_DONATION_FAILURE = 'SEND_DONATION_FAILURE';\n","import { SECRET_KEY } from \"const/variables\";\n\nconst AppUtils = {\n  showMessage: (key, message) => {\n    if (typeof message === 'undefined') {\n      console.log(key)\n    }\n    else {\n      console.log(key, message)\n    }\n  },\n  getCommonHeaders() {\n    const accessToken = localStorage.getItem('admin_access_token');\n\n    const commonHeaders =\n    {\n      'Content-Type': 'application/json'\n    };\n    if (accessToken) {\n      commonHeaders.Authorization = `Bearer ${accessToken}`;\n    }\n\n    return commonHeaders;\n  },\n  getMultipartHeaders() {\n    const accessToken = localStorage.getItem('admin_access_token');\n    const commonHeaders =\n    {\n      'Content-Type': 'multipart/form-data'\n    };\n    if (accessToken) {\n      commonHeaders.Authorization = `Bearer ${accessToken}`;\n    }\n    return commonHeaders;\n  },\n  getStripeHeaders() {\n    const commonHeaders = {\n      'Authorization': `Bearer ${SECRET_KEY}`,\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n\n    return commonHeaders;\n  },\n  async dataUrlToFile(dataUrl, fileName) {\n    if (!fileName) {\n      fileName = new Date().getTime() + \".png\"\n    }\n    const res = await fetch(dataUrl);\n    const blob = await res.blob();\n    return new File([blob], fileName, { type: 'image/png' });\n  },\n  async dataUrlToMedia(file) {\n    const { object, path } = file\n    // const ext = object.name.substr(object.name.lastIndexOf(\".\")+1,object.name.length)\n\n    const fileName = object.name\n    const res = await fetch(path);\n    const blob = await res.blob();\n    return new File([blob], fileName, { type: object.type });\n  },\n  storeItem(key, value) {\n    if (typeof value === 'object') {\n      value = JSON.stringify(value)\n    }\n    localStorage.setItem(key, value)\n  },\n  reteriveItem(key) {\n    let value = localStorage.getItem(key)\n    if (value) {\n      value = JSON.parse(value)\n    }\n    return value\n  },\n  formatDate(inputDate) {\n    const fortnightAway = new Date(inputDate);\n    const date = fortnightAway.getDate();\n    const month = [\"JAN\", \"FEB\", \"MARCH\", \"APRIL\", \"MAY\", \"JUN\", \"JULY\", \"AUG\", \"SEPT\", \"OCT\", \"NOV\", \"DEC\"][fortnightAway.getMonth()];\n    let formattedDate = `${month} ${date}${this.nth(date).sup()}, ${fortnightAway.getFullYear()}`\n    // formattedDate = formattedDate.toUpperCase()\n    return formattedDate\n  },\n  formatDate1(inputDate) {\n    const fortnightAway = new Date(inputDate);\n    const date = fortnightAway.getDate();\n\n    const month = [\"JAN\", \"FEB\", \"MARCH\", \"APRIL\", \"MAY\", \"JUN\", \"JULY\", \"AUG\", \"SEPT\", \"OCT\", \"NOV\", \"DEC\"][fortnightAway.getMonth()];\n    const day = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THUR\", \"FRI\", \"SAT\"][fortnightAway.getDay()];\n    let formattedDate = `${day}, ${month} ${date}${this.nth(date).sup()}, ${fortnightAway.getFullYear()}`\n    // formattedDate = formattedDate.toUpperCase()\n    return formattedDate\n  },\n  nth(d) {\n    // alert(d)\n    if (d > 3 && d < 21) return 'th';\n    switch (d % 10) {\n      case 1: return \"st\";\n      case 2: return \"nd\";\n      case 3: return \"rd\";\n      default: return \"th\";\n    }\n  },\n  makeUniqueId(length, onlyNumeric = false) {\n    var result = '';\n    var characters = onlyNumeric ? '0123456789' : 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  },\n  capitalize(s) {\n    if (typeof s !== 'string')\n      return ''\n    let string = s.charAt(0).toUpperCase() + s.slice(1)\n    // console.log('string',string)\n    return string\n  },\n  formatter(text) {\n    text = text.replace(/^\\D+/g, '');\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    }).format(text)\n  },\n  normalizePhoneInput(value, previousValue) {\n    AppUtils.showMessage(\"value \", value)\n    AppUtils.showMessage(\"previousValue \", previousValue)\n\n    if (!value) return value; // return nothing if no value\n\n    const onlyNums = value.replace(/[^\\d]/g, ''); // only allows 0-9 inputs\n    AppUtils.showMessage(\"onlyNums  \", onlyNums.length)\n    if (!previousValue || value.length > previousValue.length) {\n      // returns: \"(xxx)\"\n      if (onlyNums.length <= 3) return onlyNums;\n\n      // returns: \"(xxx) xxx-\"\n      if (onlyNums.length === 6) return `${onlyNums.slice(0, 3)} ${onlyNums.slice(3)}`\n\n      // returns: \"x\", \"xx\", \"xxx\"\n\n\n      // returns: \"(xxx) x\", \"(xxx) xx\",\n      if (onlyNums.length <= 6) return `${onlyNums.slice(0, 3)} ${onlyNums.slice(3)}`;\n\n      // returns: \"(xxx) xxx-x\", \"(xxx) xxx-xx\", \"(xxx) xxx-xxx\", \"(xxx) xxx-xxxx\",\n      return `${onlyNums.slice(0, 3)} ${onlyNums.slice(3, 6)} ${onlyNums.slice(6, 10)}`;\n    }\n  },\n  formatPhoneNumber(value) {\n    var numbers = value.replace(/\\D/g, ''),\n      char = { 0: '(', 3: ') ', 6: ' - ' };\n    value = '';\n    for (var i = 0; i < numbers.length; i++) {\n      value += (char[i] || '') + numbers[i];\n    }\n    return value\n  },\n  formatDate(inputDate) {\n    const fortnightAway = new Date(inputDate);\n    const date = fortnightAway.getDate();\n    const month = [\"JAN\", \"FEB\", \"MARCH\", \"APRIL\", \"MAY\", \"JUN\", \"JULY\", \"AUG\", \"SEPT\", \"OCT\", \"NOV\", \"DEC\"][fortnightAway.getMonth()];\n    let formattedDate = `${month} ${date}, ${fortnightAway.getFullYear()}`\n    // formattedDate = formattedDate.toUpperCase()\n    return formattedDate\n  },\n}\n\nexport default AppUtils","\nexport const PUBLISH_KEY = 'pk_test_5cxRLHy0Xl8BYMo6Ug1Fvcsb00LQDXS7d2'\nexport const SECRET_KEY = 'sk_test_SJGNEOI7KmKJwujvCFmpNGco00mtErhcAE'\n\nexport const legacy_fields = [\n    {\n      id: 1,\n      close: false,\n      label: \"Obituary\",\n      placeholder: \"Write a public notice of the person’s life to share online and with newspapers.\",\n      path: \"https://en.wikipedia.org/wiki/Obituary\",\n      type: \"obituary\"\n    },\n    {\n      id: 2,\n      label: \"Eulogy\",\n      close: false,\n      placeholder: \"Express in writing the memories and appreciation you have for someone’s life and the impact they had on you and others.\",\n      path: \"https://en.wikipedia.org/wiki/Eulogy\",\n      type: \"eulogy\"\n    },\n    {\n      id: 3,\n      close: false,\n      label: \"Special Moments\",\n      placeholder: \"Highlight memories and milestones of one’s life, like graduation, wedding anniversary, military history, and achievements.\",\n      type: \"specialMoments\"\n    },\n    {\n      id: 4,\n      close: false,\n      label: \"Farewell Post\",\n      placeholder: \"Leave your friends and family a farewell message to live on in their hearts.\",\n      type: \"farewellPost\"\n    },\n    {\n      id: 5,\n      close: false,\n      label: \"Leave Private Messages\",\n      placeholder: \"Leave a special message for someone.\",\n      type: \"leavePrivateMessages\"\n    },\n    {\n      id: 6,\n      close: false,\n      label: \"Last Wishes\",\n      placeholder: \"Let your friends and family know of any enduring special requests.\",\n      type: \"lastWishes\"\n    },\n    {\n      id: 7,\n      close: false,\n      label: \"Favorite Joke\",\n      placeholder: \"Keep your friends and family laughing at a favorite joke.\",\n      \"type\": \"favJoke\"\n    },\n    {\n      id: 8,\n      close: false,\n      label: \"Favorite Story\",\n      placeholder: \"Post a favorite story to bring smiles to the faces of your friends and family.\",\n      type: \"favStory\"\n    },\n    {\n      id: 10,\n      close: false,\n      label: \"Favorite Book, Movie, Show, etc.\",\n      placeholder: \"Leave some book, movie and TV show ideas behind to help with grieving.\",\n      type: \"favBook\"\n    },\n    {\n      id: 11,\n      close: false,\n      label: \"Favorite Songs\",\n      placeholder: \"List and upload some favorite songs to share.\",\n      type: \"favSongs\"\n    }\n  ]","import {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAILURE\n} from 'actions/types';\n\nimport { PROFILE_DATA } from 'const/app';\nimport AppUtils from 'utils/AppUtils';\n\nconst initialState = {\n    refreshToken: localStorage.getItem('admin_refresh_token'),\n    accessToken: null,\n    loading: false,\n    user: null,\n    errors: []\n};\n\nconst clearLocalStorage = () => {\n    localStorage.removeItem('refresh_token');\n    localStorage.removeItem('access_token');\n    localStorage.removeItem(PROFILE_DATA)\n}\n\nexport default function (state = initialState, action) {\n    const {\n        type,\n        payload\n    } = action;\n\n    switch (type) {\n        case LOGIN_REQUEST:\n            return {\n                ...state,\n                isAuthenticated: false,\n                loading: true\n            }\n        case LOGIN_SUCCESS:\n            localStorage.setItem('admin_refresh_token', payload.data.refreshToken);\n            localStorage.setItem('admin_access_token', payload.data.accessToken);\n           \n            return {\n                ...state,\n                ...payload.data,\n                isAuthenticated: false,\n                loading: false,\n                errors: [],\n                userType: 'user'\n            }\n\n        case LOGIN_FAILURE:\n            // clearLocalStorage();\n            AppUtils.showMessage(\"payload\", payload)\n            return {\n                ...state,\n                errors: payload.errors,\n                loading: false,\n            }\n        default:\n            return state\n    }\n}\n","import { ADMIN_USER_SUCCESS } from 'actions/types';\nimport { ADMIN_LEGACY_SUCCESS } from 'actions/types';\nimport { ADMIN_DONATION_SUCCESS } from 'actions/types';\nimport { COUNT_REQUEST } from 'actions/types';\nimport { COUNT_FAILURE } from 'actions/types';\nimport { ADMIN_PROFILE_SUCCESS } from 'actions/types';\nimport { UPDATE_LEGACY } from 'actions/types';\nimport { GET_MEMORIAL_SUCCESS } from 'actions/types';\nimport { GET_USER_REQUEST } from 'actions/types';\nimport { GET_USER_SUCCESS } from 'actions/types';\nimport { GET_USER_FAILURE } from 'actions/types';\nimport { GET_MEMORIAL_FAILURE } from 'actions/types';\nimport { GET_MEMORIAL_REQUEST } from 'actions/types';\nimport { ADMIN_PROFILE_FAILURE } from 'actions/types';\nimport { ADMIN_PROFILE_REQUEST } from 'actions/types';\nimport { COUNT_SUCCESS } from 'actions/types';\nimport { ADMIN_CHARITY_SUCCESS } from 'actions/types';\nimport { ADMIN_BURIAL_SUCCESS } from 'actions/types';\nimport {\n    ADMIN_REQUEST,\n    ADMIN_SUCCESS,\n    ADMIN_FAILURE\n} from 'actions/types';\n\nimport { PROFILE_DATA } from 'const/app';\nimport AppUtils from 'utils/AppUtils';\n\nconst initialState = {\n    loading: false,\n    errors: [],\n    users: [],\n    legacy: [],\n    burial: [],\n    charity: [],\n    donation: [],\n    count: {},\n    profile: {},\n    memorial: {},\n    user:{\n        number: {\n            phone: '',\n            other: ''\n        },\n        address: {\n            street: '',\n            house: '',\n            city: '',\n            country: '',\n            state: '',\n            zip: ''\n        },\n        filePath:'',\n        firstName: '',\n        lastName: '',\n        fullName: '',\n        prefix: '',\n        suffix: '',\n        legal_name: '',\n        middle_name: '',\n        isLegal: false,\n        isBilling: false,\n        isVeteran: false,\n        isName: false,\n        isEmail: false,\n        dob: '',\n        dop: '',\n        martial: '',\n        religon: '',\n        gender: 'm'\n    }\n};\n\nexport default function (state = initialState, action) {\n    const {\n        type,\n        payload\n    } = action;\n\n    switch (type) {\n        case ADMIN_REQUEST:\n            return {\n                ...state,\n                isAuthenticated: false,\n                loading: true\n            }\n\n        case ADMIN_USER_SUCCESS:\n            return {\n                ...state,\n                users: payload.data,\n                loading: false,\n                errors: []\n            }\n        case ADMIN_LEGACY_SUCCESS:\n            return {\n                ...state,\n                legacy: payload.data,\n                loading: false,\n                errors: []\n            }\n        case ADMIN_BURIAL_SUCCESS:\n            return {\n                ...state,\n                burial: payload.data,\n                loading: false,\n                errors: []\n            }\n        case ADMIN_CHARITY_SUCCESS:\n            return {\n                ...state,\n                charity: payload.data,\n                loading: false,\n                errors: []\n            }\n        case ADMIN_DONATION_SUCCESS:\n            return {\n                ...state,\n                donation: payload.data,\n                loading: false,\n                errors: []\n            }\n\n        case ADMIN_FAILURE:\n            // clearLocalStorage();\n            AppUtils.showMessage(\"payload\", payload)\n            return {\n                ...state,\n                errors: payload.errors,\n                loading: false,\n                data: []\n            }\n\n        case COUNT_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case COUNT_SUCCESS:\n            return {\n                ...state,\n                count: payload.data,\n                loading: false,\n                errors: []\n            }\n        case COUNT_FAILURE:\n            return {\n                ...state,\n                count: {},\n                loading: false,\n                errors: []\n            }\n        case ADMIN_PROFILE_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case ADMIN_PROFILE_SUCCESS:\n            return {\n                ...state,\n                profile: payload.data,\n                loading: false,\n                errors: []\n            }\n        case ADMIN_PROFILE_FAILURE:\n            return {\n                ...state,\n                count: {},\n                loading: false,\n                errors: []\n            }\n        case GET_MEMORIAL_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case GET_MEMORIAL_SUCCESS:\n            return {\n                ...state,\n                memorial: payload.data,\n                loading: false,\n                errors: []\n            }\n        case GET_MEMORIAL_FAILURE:\n            return {\n                ...state,\n                memorial: {},\n                loading: false,\n                errors: []\n            }\n        case GET_USER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case GET_USER_SUCCESS:\n            return {\n                ...state,\n                user: payload.data,\n                loading: false,\n                errors: []\n            }\n        case GET_USER_FAILURE:\n            return {\n                ...state,\n                memorial: {},\n                loading: false,\n                errors: []\n            }\n        default:\n            return state\n    }\n}\n","import { SEND_DONATION_REQUEST } from 'actions/types';\nimport { SEND_DONATION_FAILURE } from 'actions/types';\nimport { SEND_DONATION_SUCCESS } from 'actions/types';\nimport {\n    GET_DONATION_REQUEST,\n    GET_DONATION_SUCCESS,\n    GET_DONATION_FAILURE\n} from 'actions/types';\n\nimport AppUtils from 'utils/AppUtils';\n\nconst initialState = {\n    loading: false,\n    errors: [],\n    requests: [],\n    \n};\n\nexport default function (state = initialState, action) {\n    const {\n        type,\n        payload\n    } = action;\n\n    switch (type) {\n        \n        case GET_DONATION_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case GET_DONATION_SUCCESS:\n            return {\n                ...state,\n                requests: payload.data,\n                loading: false,\n                errors: []\n            }\n        case GET_DONATION_FAILURE:\n            return {\n                ...state,\n                requests: [],\n                loading: false,\n                errors: []\n            }\n\n        case SEND_DONATION_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case SEND_DONATION_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                errors: []\n            }\n        case SEND_DONATION_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                errors: []\n            }\n        default:\n            return state\n    }\n}\n","import { LOGOUT_SUCCESS } from 'actions/types';\nimport { combineReducers } from 'redux';\n\n// Reducers\n// import DocumentData from './DocumentData';\nimport auth from './auth'\nimport admin from './admin'\nimport requests from './requests'\n\nconst appReducer = combineReducers({\n    auth,\n    admin,\n    requests\n});\n\nconst rootReducer = (state, action) => {\n\n    if ([LOGOUT_SUCCESS].includes(action.type)) {\n       state = undefined\n    }\n  \n    return appReducer(state, action)\n  }\nexport default rootReducer;","// Imports: Dependencies\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from 'reducers';\n\nconst middleware = [thunk];\n// Redux: Store\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(\n        applyMiddleware(...middleware)\n    )\n);\n\n// Exports\nexport {\n    store\n}\n","/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/css/animate.min.css\";\nimport \"./assets/scss/light-bootstrap-dashboard-react.scss?v=2.0.0\";\nimport \"./assets/css/style.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nimport Login from \"views/Login\";\nimport Forgot from \"views/Forgot\";\nimport ChangePassword from \"views/ChangePassword\";\nimport Users from \"views/Users\";\nimport UserDetails from \"views/UserDetail\";\nimport Questions from \"views/Questions\";\nimport Confirmation from \"views/Confirmation\";\nimport { ToastProvider } from 'react-toast-notifications';\nimport { Provider } from 'react-redux';\nimport { store } from 'store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <ToastProvider styles={{\n      container: (provided) => ({ ...provided, zIndex: 999999, top: 50 })\n    }}>\n      <HashRouter>\n        <Switch>          \n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/forgot\" component={Forgot} />\n          <Route path=\"/change-password\" component={ChangePassword} />\n          <Route path=\"/users\" component={Users} />\n          <Route path=\"/user-details\" component={UserDetails} />\n          <Route path=\"/questions\" component={Questions} />\n          <Route path=\"/confirmation\" component={Confirmation} />\n          <Redirect from=\"/\" to=\"/login\" />\n        </Switch>\n      </HashRouter>\n    </ToastProvider>\n  </Provider>\n  ,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}