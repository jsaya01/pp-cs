{"version":3,"sources":["assets/img/logo.png","components/SemanticInput/index.js","components/Button/index.js","views/Login.js","UserPool.js","views/Forgot.js","views/ChangePassword.js","actions/types.js","actions/users.js","views/Users.js","views/UserDetail.js","actions/questions.js","views/Questions.js","views/Confirmation.js","views/PrivacyPolicy.js","reducers/users.js","reducers/questions.js","reducers/index.js","store/index.js","index.js"],"names":["SemanticInput","props","Form","Field","style","width","Input","formStyles","value","type","placeholder","onChange","onBlur","onKeyUp","name","className","iconPosition","position","icon","Icon","link","onClick","onIcon","ButtonView","Button","variant","block","disabled","title","Amplify","configure","Auth","identityPoolId","region","userPoolId","userPoolWebClientId","API","endpoints","endpoint","register","Login","addToast","useToasts","validationSchema","Yup","shape","email","max","required","password","loginUser","values","a","signIn","appearance","autoDismiss","window","location","href","message","Container","Row","src","logo","md","Col","sm","initialValues","enableReinitialize","onSubmit","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","noGutters","e","keyCode","CognitoUserPool","UserPoolId","ClientId","Forgot","forgotPass","CognitoUser","Username","username","Pool","UserPool","forgotPassword","onSuccess","data","onFailure","err","console","error","inputVerificationCode","localStorage","setItem","ChangePassword","resetPassword","log","code","getItem","getUser","confirmPassword","USER_SUCCESS","USER_FAILURE","QUESTION_SUCCESS","QUESTION_FAILURE","userSuccess","payload","Users","dispatch","useDispatch","userData","useSelector","state","users","user","useState","searchUser","myInit","body","search","headers","post","then","response","successCb","saveUserData","res","renderUsers","catch","Card","Body","Text","firstName","lastName","Title","addressLine1","addressLine2","setSubmitting","resetForm","UserDetail","isCheckedAddress","setIsCheckedAddress","isCheckedPincode","setIsCheckedPincode","isCheckedEmail","setIsCheckedEmail","class","Table","responsive","id","checked","zip","questionSuccess","Questions","questionData","questions","setQuestions","setError","getQeustionData","get","pools","length","allQuestion","saveQuestionData","renderAnswer","answers","options","poolId","map","answer","qidx","Group","controlId","Check","label","playerName","target","questionId","questionOptionId","findIndex","ite","push","onOptionChecked","useEffect","item","idx","questionNumber","question","status","document","onSave","Confirmation","PrivacyPolicy","initialState","loading","appReducer","combineReducers","action","AppUtils","showMessage","rootReducer","includes","undefined","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","styles","container","provided","zIndex","top","path","component","UserDetails","from","to","getElementById"],"mappings":"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","file":"static/js/main.d12e8a89.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.596d2f9e.png\";","import React from 'react'\nimport FontAwesome from 'react-fontawesome'\nimport { Form, Icon, Input } from 'semantic-ui-react';\n\nfunction SemanticInput(props) {\n  \n   \n  return (\n\n    <Form.Field   style={{ width: '100%' }}>\n      <Input\n        \n        style={props.formStyles ? props.formStyles : { width: '100%' }}\n        value={props.value}\n        type={props.type ? props.type : \"text\"}\n        placeholder={props.placeholder}\n        onChange={props.onChange ? props.onChange : null}\n        onBlur={props.onBlur ? props.onBlur : null}\n        onKeyUp={props.onKeyUp ? props.onKeyUp : null}\n        name={props.name}\n        className={props.className}\n        iconPosition={props.position}\n        icon={props.icon?\n          <Icon\n            name={props.icon}\n            link\n            onClick={()=>props.onIcon?props.onIcon():null}\n            \n          />:\n          null\n        }\n       \n      />\n    </Form.Field>\n\n  )\n}\n\nexport default SemanticInput","import React from 'react'\nimport { Button } from 'react-bootstrap'\n\nfunction ButtonView(props){\n  return(\n    <Button \n      variant={props.variant}\n      style={props.style}\n      block={props.block}\n      disabled={props.disabled?props.disabled:false}\n      onClick={()=>props.onClick?props.onClick():null}\n      >\n      {props.title}\n     </Button>\n  )\n}\n\nexport default ButtonView","import React, { useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Formik } from 'formik'\nimport logo from \"assets/img/logo.png\";\nimport * as Yup from 'yup'\nimport SemanticInput from 'components/SemanticInput';\nimport ButtonView from 'components/Button'\nimport { useToasts } from 'react-toast-notifications';\nimport Amplify from 'aws-amplify';\nimport API from '@aws-amplify/api';\nimport Auth from '@aws-amplify/auth';\n\nAmplify.configure({\n    // OPTIONAL - if your API requires authentication \n    Auth: {\n        // REQUIRED - Amazon Cognito Identity Pool ID\n        identityPoolId: 'us-east-2:21a43261-471d-4806-8b53-9e9644d21a7c',\n        // REQUIRED - Amazon Cognito Region\n        region: 'us-east-2',\n        // OPTIONAL - Amazon Cognito User Pool ID\n        userPoolId: 'us-east-2_BhxYrS22b',\n        // OPTIONAL - Amazon Cognito Web Client ID (26-char alphanumeric string)\n        userPoolWebClientId: '3hqarjn19erj26noi5bv7ok91v',\n    },\n    API: {\n        endpoints: [\n            {\n                name: \"BASE\",\n                endpoint: \"https://ofcfn44ech.execute-api.us-east-2.amazonaws.com/dev\",\n                region: \"us-east-2\"\n            }\n        ]\n    }\n});\nAmplify.register(Auth);\nAmplify.register(API);\n\nfunction Login() {\n    const { addToast } = useToasts()\n    const validationSchema = Yup.object().shape({\n        email: Yup.string()\n            .email(\"Enter  valid email address\")\n            .max(100, \"Email must be less than 100 characters\")\n            .required(\"Email is required\"),\n        password: Yup.string()\n            .required(\"Password is required\")\n    });\n\n    const loginUser = async (values) => {\n\n        try {\n            const user = await Auth.signIn(values.email, values.password);\n            addToast(\"Login Success\", { appearance: 'success', autoDismiss: true });\n            window.location.href = '#users'\n\n        } catch (error) {\n            addToast(error.message, {\n                appearance: 'error',\n                autoDismiss: true\n            });\n        }\n\n    }\n\n    return (\n        <Container >\n            <Row className=\"justify-content-center\">\n                <img className=\"img-fluid logo\" src={logo} />\n            </Row>\n            <Row md={12}>\n                <Col md={8} className=\"mt-3 offset-md-2\" sm={6}>\n                    <div className=\"dash-container\">\n                        <Row className=\"justify-content-center mb-5\">\n                            <h2 className=\"text \">Welcome!</h2>\n                            <p className=\"text-center\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore.</p>\n                        </Row>\n                        <Formik\n                            initialValues={{ email: \"\", password: \"\" }}\n                            // Hooks up our validationSchema to Formik \n                            validationSchema={validationSchema}\n                            enableReinitialize={true}\n                            onSubmit={async (values) => {\n                                loginUser(values)\n                            }}>\n                            {({\n                                values,\n                                errors,\n                                touched,\n                                handleChange,\n                                handleBlur,\n                                handleSubmit,\n                                isSubmitting,\n                            }) => (\n                                <>\n                                    <Row className=\"justify-content-center\" noGutters>\n                                        <Col md={9}>\n                                            <SemanticInput\n                                                placeholder={'Enter your email address'}\n                                                icon={'envelope'}\n                                                position={'left'}\n                                                name=\"email\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.email}\n                                                className={touched.email && errors.email ? \"error\" : null}\n                                                onKeyUp={(e) => e.keyCode === 13 ? handleSubmit() : null}\n                                            />\n                                            {touched.email && errors.email ? (\n                                                <div className=\"error-message\">{errors.email}</div>\n                                            ) : null}\n                                        </Col>\n                                        <Col md={9}>\n                                            <SemanticInput\n                                                type={\"password\"}\n                                                placeholder={'Enter your password'}\n                                                icon={'key'}\n                                                position={'left'}\n                                                name=\"password\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.password}\n                                                className={touched.password && errors.password ? \"error\" : null}\n                                                onKeyUp={(e) => e.keyCode === 13 ? handleSubmit() : null}\n\n\n                                            />\n                                            {touched.password && errors.password ? (\n                                                <div className=\"error-message\">{errors.password}</div>\n                                            ) : null}\n\n                                        </Col>\n                                    </Row>\n                                    <Row className={'justify-content-center pt-2'} noGutters>\n                                        <Col md={9}>\n                                            <a href=\"#/forgot\"><p className=\"text-right font-12\">Forgot your password?</p></a>\n                                        </Col>\n                                    </Row>\n                                    <Row className={'pt-3 justify-content-center'} noGutters>\n                                        <Col md={6} className=\"d-flex justify-content-center\">\n                                            <ButtonView\n                                                variant={'primary'}\n                                                title={'Login'}\n                                                block={true}\n                                                onClick={handleSubmit}\n                                            />\n                                        </Col>\n                                    </Row>\n\n                                </>\n                            )}\n                        </Formik>\n                    </div>\n                </Col>\n                <Col md={2} sm={3} />\n            </Row>\n        </Container>\n    )\n}\n\nexport default Login","import{ CognitoUserPool } from \"amazon-cognito-identity-js\";\n\nconst poolData={\n    UserPoolId: \"us-east-2_BhxYrS22b\",\n    ClientId: \"3hqarjn19erj26noi5bv7ok91v\",\n    region:\"us-east-2\"\n}\n\n\nexport default new CognitoUserPool(poolData)","import React, { useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Formik } from 'formik'\nimport logo from \"assets/img/logo.png\";\nimport SemanticInput from 'components/SemanticInput';\nimport { useToasts } from 'react-toast-notifications';\nimport ButtonView from 'components/Button'\nimport { CognitoUser } from \"amazon-cognito-identity-js\";\nimport UserPool from \"../UserPool\";\n\nfunction Forgot() {\n    const { addToast } = useToasts()\n    function forgotPass(values) {\n\n        const getUser = () => {\n            return new CognitoUser({\n                Username: values.username,\n                Pool: UserPool\n            });\n        };\n\n        getUser().forgotPassword({\n            onSuccess: data => {\n                window.location.href = '#change-password'\n            },\n            onFailure: err => {\n                console.error(\"onFailure:\", err);\n                addToast(err.message, {\n                    appearance: 'error',\n                    autoDismiss: true\n                });\n            },\n            inputVerificationCode: data => {\n                localStorage.setItem(\"username\", values.username)\n                window.location.href = '#change-password'\n            }\n        });\n    }\n\n    return (\n        <Container >\n            <Row className=\"justify-content-center\">\n                <img className=\"img-fluid logo\" src={logo} />\n            </Row>\n            <Row md={12}>\n                <Col md={8} className=\"mt-3 offset-md-2\" sm={6}>\n                    <div className=\"dash-container\">\n                        <Row className=\"justify-content-center mb-5\">\n                            <h2 className=\"text \">Forgot Password!</h2>\n                        </Row>\n                        <Formik\n                            initialValues={{ email: \"\" }}\n                            // Hooks up our validationSchema to Formik \n                            enableReinitialize={true}\n                            onSubmit={async (values) => {\n                                forgotPass(values)\n                            }}>\n                            {({\n                                values,\n                                errors,\n                                touched,\n                                handleChange,\n                                handleBlur,\n                                handleSubmit,\n                                isSubmitting,\n                            }) => (\n                                <>\n                                    <Row className=\"justify-content-center\" noGutters>\n                                        <Col md={9}>\n                                            <SemanticInput\n                                                placeholder={'Enter your username '}\n                                                icon={'envelope'}\n                                                position={'left'}\n                                                name=\"username\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.username}\n                                                className={touched.username && errors.username ? \"error\" : null}\n                                                onKeyUp={(e) => e.keyCode === 13 ? handleSubmit() : null}\n                                            />\n                                            {touched.username && errors.username ? (\n                                                <div className=\"error-message\">{errors.username}</div>\n                                            ) : null}\n                                        </Col>\n\n                                    </Row>\n\n                                    <Row className={'pt-3 justify-content-center'} noGutters>\n                                        <Col md={6} className=\"d-flex justify-content-center\">\n\n                                            <ButtonView\n                                                variant={'primary'}\n                                                title={'Submit'}\n                                                block={true}\n                                                onClick={handleSubmit}\n                                            />\n\n                                        </Col>\n                                    </Row>\n                                </>\n                            )}\n                        </Formik>\n                    </div>\n                </Col>\n                <Col md={2} sm={3} />\n            </Row>\n        </Container>\n    )\n}\n\nexport default Forgot","import React, { useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Formik } from 'formik'\nimport logo from \"assets/img/logo.png\";\nimport SemanticInput from 'components/SemanticInput';\nimport ButtonView from 'components/Button'\nimport { useToasts } from 'react-toast-notifications';\nimport { CognitoUser } from \"amazon-cognito-identity-js\";\nimport UserPool from \"../UserPool\";\n\nfunction ChangePassword() {\n    const { addToast } = useToasts()\n    function resetPassword(values) {\n        console.log(values.code)\n        const getUser = () => {\n            let username = localStorage.getItem(\"username\");\n            return new CognitoUser({\n                Username: username,\n                Pool: UserPool\n            });\n        };\n\n        getUser().confirmPassword(values.code, values.password, {\n            onSuccess: data => {\n                console.log(\"onSuccess:\", data);\n                window.location.href = '#login'\n            },\n            onFailure: err => {\n                addToast(err.message, {\n                    appearance: 'error',\n                    autoDismiss: true\n                });\n            }\n        });\n    }\n\n    return (\n        <Container >\n            <Row className=\"justify-content-center\">\n                <img className=\"img-fluid logo\" src={logo} />\n            </Row>\n            <Row md={12}>\n                <Col md={8} className=\"mt-3 offset-md-2\" sm={6}>\n                    <div className=\"dash-container\">\n                        <Row className=\"justify-content-center mb-5\">\n                            <h2 className=\"text \">Reset Password!</h2>\n                        </Row>\n                        <Formik\n                            initialValues={{ code: \"\", password: \"\" }}\n                            // Hooks up our validationSchema to Formik \n                            enableReinitialize={true}\n                            onSubmit={async (values) => {\n                                resetPassword(values)\n                            }}>\n                            {({\n                                values,\n                                errors,\n                                touched,\n                                handleChange,\n                                handleBlur,\n                                handleSubmit,\n                                isSubmitting,\n                            }) => (\n                                <>\n                                    <Row className=\"justify-content-center\" noGutters>\n                                        <Col md={9}>\n                                            <SemanticInput\n                                                placeholder={'Enter your code '}\n                                                icon={'envelope'}\n                                                position={'left'}\n                                                name=\"code\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.code}\n                                                className={touched.code && errors.code ? \"error\" : null}\n                                                onKeyUp={(e) => e.keyCode === 13 ? handleSubmit() : null}\n                                            />\n                                            {touched.code && errors.code ? (\n                                                <div className=\"error-message\">{errors.code}</div>\n                                            ) : null}\n                                        </Col>\n\n                                    </Row>\n\n                                    <Row className=\"justify-content-center\" noGutters>\n                                        <Col md={9}>\n                                            <SemanticInput\n                                                placeholder={'Enter your password '}\n                                                icon={'envelope'}\n                                                position={'left'}\n                                                name=\"password\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.password}\n                                                className={touched.password && errors.password ? \"error\" : null}\n                                                onKeyUp={(e) => e.keyCode === 13 ? handleSubmit() : null}\n                                            />\n                                            {touched.password && errors.password ? (\n                                                <div className=\"error-message\">{errors.password}</div>\n                                            ) : null}\n                                        </Col>\n\n                                    </Row>\n\n\n\n                                    <Row className={'pt-3 justify-content-center'} noGutters>\n                                        <Col md={6} className=\"d-flex justify-content-center\">\n\n                                            <ButtonView\n                                                variant={'primary'}\n                                                title={'Submit'}\n                                                block={true}\n                                                onClick={handleSubmit}\n                                            />\n\n                                        </Col>\n                                    </Row>\n\n\n                                </>\n                            )}\n                        </Formik>\n                    </div>\n                </Col>\n                <Col md={2} sm={3} />\n            </Row>\n        </Container>\n    )\n}\n\nexport default ChangePassword","/**\n * auth action types\n */\n\nexport const USER_SUCCESS = 'USER_SUCCESS';\nexport const USER_FAILURE = 'USER_FAILURE';\n\n\nexport const QUESTION_SUCCESS = 'QUESTION_SUCCESS';\nexport const QUESTION_FAILURE = 'QUESTION_FAILURE';\n","import {\n    USER_FAILURE,\n    USER_SUCCESS\n} from \"./types\";\n\n// user data\n\nexport const userSuccess = (data) => {\n    return {\n        type: USER_SUCCESS,\n        payload: data\n    }\n}\n\nexport const userFailure = (data) => {\n    return {\n        type: USER_FAILURE,\n        payload: data\n    }\n}\n\nexport const saveUserData = ({\n    data,\n    successCb,\n}) => async dispatch => {\n   \n    \n    if (typeof successCb === 'function') {\n        successCb(data);\n    }\n    dispatch(userSuccess(data))\n}\n","import React, { useEffect, useState } from 'react'\nimport { Container, Row, Col, Card, Image } from 'react-bootstrap'\nimport { Formik } from 'formik'\nimport logo from \"assets/img/logo.png\";\nimport SemanticInput from 'components/SemanticInput';\nimport ButtonView from 'components/Button'\nimport { useToasts } from 'react-toast-notifications';\nimport Amplify, { API, Auth } from 'aws-amplify'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveUserData } from 'actions/users'\n\nfunction Users() {\n  const { addToast } = useToasts()\n  const dispatch = useDispatch()\n  const users = useSelector(state => state.users)\n  const userData = users.user;\n  const [error, setError] = useState('')\n\n\n  function searchUser(values) {\n\n    const apiName = 'BASE';\n    const path = '/getUserByCriteria';\n    const myInit = {\n      body: {\n        email: values.search\n      },\n      headers: {}\n    };\n\n    API\n      .post(apiName, path, myInit)\n      .then(response => {\n        // Add your code here   \n        ///if user not found\n        if (!response.user) {\n          addToast(\"User not found!\", {\n            appearance: 'error',\n            autoDismiss: true\n          });\n        }\n        else {\n          dispatch(saveUserData({\n            data: response.user,\n            successCb: (res) => {\n              renderUsers();\n            }\n          }))\n        }\n      })\n      .catch(error => {\n        addToast(error, { appearance: 'error', autoDismiss: true });\n      });\n  }\n\n  function renderUsers() {\n    if (userData !== null) {\n      return (\n        <Col md={6}>\n          <a href=\"#/user-details\">\n            <Card>\n              <Card.Body>\n                <Row>\n                  <Col md={10}>\n                    <Card.Text>\n                      {userData.firstName} {userData.lastName}\n                    </Card.Text>\n                    <Card.Title>{userData.addressLine1} {userData.addressLine2} </Card.Title>\n                  </Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          </a>\n        </Col>\n      )\n    }\n  }\n\n  return (\n    <Container >\n      <Row className=\"justify-content-center mt-5\">\n        <a href=\"#/login\">\n          <img className=\"img-fluid logo\" src={logo} />\n        </a>\n      </Row>\n      <Row md={12} className=\"pb-5 mb-5\">\n        <Col md={10} className=\"mt-5 offset-md-1\" sm={6}>\n          <div className=\"dash-container\">\n            <Row className=\"justify-content-center mb-5\">\n              <h2 className=\"text \">User Search!</h2>\n              <p className=\"text-center\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore.</p>\n            </Row>\n            <Formik\n              initialValues={{ search: \"\" }}\n              enableReinitialize={true}\n              onSubmit={async (values, { setSubmitting, resetForm }) => {\n                searchUser(values)\n              }}>\n              {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n              }) => (\n                <>\n                  <Row className=\"justify-content-center\" noGutters>\n                    <Col md={9}>\n                      <SemanticInput\n                        placeholder={'Enter email address'}\n                        position={'left'}\n                        name=\"search\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.search}\n                        className={touched.search && errors.search ? \"error\" : null}\n                        onKeyUp={(e) => e.keyCode === 13 ? handleSubmit() : null}\n                      />\n\n                    </Col>\n                  </Row>\n\n                  <Row className={'pt-3 justify-content-center'} noGutters>\n                    <Col md={6} className=\"d-flex justify-content-center\">\n                      <ButtonView\n                        variant={'primary'}\n                        title={'Search'}\n                        block={true}\n                        onClick={handleSubmit}\n                      />\n                    </Col>\n                  </Row>\n\n                </>\n              )}\n            </Formik>\n\n            <Row className=\"mt-5 users\">\n\n              {renderUsers()}\n\n            </Row>\n          </div>\n\n        </Col>\n      </Row>\n\n    </Container>\n  )\n}\n\nexport default Users","import React, { useEffect, useState } from 'react'\nimport { Container, Row, Col, Card, Image, Table, InputGroup } from 'react-bootstrap'\nimport { Formik } from 'formik'\nimport logo from \"assets/img/logo.png\";\nimport ButtonView from 'components/Button';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction UserDetail() {\n\n    const users = useSelector(state => state.users)\n    const userData = users.user;\n\n    const [isCheckedAddress, setIsCheckedAddress] = useState(false);\n    const [isCheckedPincode, setIsCheckedPincode] = useState(false);\n    const [isCheckedEmail, setIsCheckedEmail] = useState(false);\n\n    const handleOnChangeAddress = () => {\n        setIsCheckedAddress(!isCheckedAddress);\n    };\n    const handleOnChangePincode = () => {\n        setIsCheckedPincode(!isCheckedPincode);\n    };\n\n    const handleOnChangeEmail = () => {\n        setIsCheckedEmail(!isCheckedEmail);\n    };\n\n    function questionButton() {\n        if (isCheckedAddress && isCheckedPincode && isCheckedEmail) {\n            return (\n                <a href=\"#/questions\">\n                    <ButtonView\n                        variant={'primary'}\n                        title={'Continue'}\n                        block={true}\n                    />\n                </a>\n            )\n\n        }\n        else {\n            return (\n                <ButtonView\n                    variant={'success'}\n                    title={'Continue'}\n                    block={true}\n                />\n\n            )\n        }\n    }\n\n\n    return (\n        <Container >\n            <Row className=\"justify-content-center mt-5\">\n                <a href=\"#/login\">\n                    <img className=\"img-fluid logo\" src={logo} />\n                </a>\n            </Row>\n            <Row md={12} className=\"pb-5 mb-5\">\n                <Col md={10} className=\"mt-5 offset-md-1\" sm={6}>\n                    <div class=\"dash-container\">\n                        <Row className=\"justify-content-center mb-5\">\n                            <h2 className=\"text \">User Details</h2>\n                            <p className=\"text-center\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore.</p>\n                        </Row>\n                        <Row className=\"mt-5 detail offset-md-2\">\n                            <Col md={9}>\n                                <Card className=\"text-center pb-5 pt-2\">\n\n                                    <Card.Body>\n\n                                        <Table responsive>\n                                            <tbody>\n                                                <tr>\n                                                    <th></th>\n                                                    <th>{userData.firstName}</th>\n                                                    <th>Confirmed</th>\n                                                </tr>\n                                                <tr>\n                                                    <td>  <strong className=\"mr-3\">Address</strong></td>\n                                                    <td>  {userData.addressLine1} {userData.addressLine2}</td>\n                                                    <td>\n                                                        <input\n                                                            type=\"checkbox\"\n                                                            id=\"address\"\n                                                            name=\"address\"\n                                                            value=\"Address\"\n                                                            checked={isCheckedAddress}\n                                                            onChange={handleOnChangeAddress}\n                                                        />\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td>  <strong className=\"mr-3\">Pincode</strong></td>\n                                                    <td> {userData.zip}</td>\n                                                    <td>\n                                                        <input\n                                                            type=\"checkbox\"\n                                                            id=\"pincode\"\n                                                            name=\"pincode\"\n                                                            value=\"Pincode\"\n                                                            checked={isCheckedPincode}\n                                                            onChange={handleOnChangePincode}\n                                                        />\n                                                    </td>\n                                                </tr>\n                                                <tr>\n                                                    <td>  <strong className=\"mr-3\">Email</strong></td>\n                                                    <td> {userData.email}</td>\n                                                    <td>\n                                                        <input\n                                                            type=\"checkbox\"\n                                                            id=\"email\"\n                                                            name=\"email\"\n                                                            value=\"Email\"\n                                                            checked={isCheckedEmail}\n                                                            onChange={handleOnChangeEmail}\n                                                        />\n                                                    </td>\n                                                </tr>\n\n                                            </tbody>\n\n                                        </Table>\n                                        <Row className={'pt-3 justify-content-center'} noGutters>\n                                            <Col md={5} className=\"mr-2 mb-3 justify-content-center\">\n                                                <a href=\"#/login\">\n                                                    <ButtonView\n                                                        variant={'danger'}\n                                                        title={'Cancel'}\n                                                        block={true}\n                                                    />\n                                                </a>\n                                            </Col>\n                                            <Col md={5} className=\"ml-2 justify-content-center\">\n\n                                                {questionButton()}\n\n                                            </Col>\n                                        </Row>\n\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </div>\n\n                </Col>\n            </Row>\n\n        </Container>\n    )\n}\n\nexport default UserDetail","import {\n    QUESTION_SUCCESS,\n    QUESTION_FAILURE\n} from \"./types\";\n\n// user data\n\nexport const questionSuccess = (data) => {\n    return {\n        type: QUESTION_SUCCESS,\n        payload: data\n    }\n}\n\nexport const questionFailure = (data) => {\n    return {\n        type: QUESTION_FAILURE,\n        payload: data\n    }\n}\n\nexport const saveQuestionData = ({\n    data,\n    successCb,\n}) => async dispatch => {\n   \n    \n    if (typeof successCb === 'function') {\n        successCb(data);\n    }\n    dispatch(questionSuccess(data))\n}\n","import React, { useEffect, useState } from 'react'\nimport { Container, Row, Col, Card, Form, FormControl, InputGroup } from 'react-bootstrap'\nimport logo from \"assets/img/logo.png\";\nimport ButtonView from 'components/Button';\nimport Amplify, { API, Auth } from 'aws-amplify'\nimport { useToasts } from 'react-toast-notifications';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveQuestionData } from 'actions/questions'\n\nfunction Questions() {\n    const { addToast } = useToasts()\n    const dispatch = useDispatch()\n    const question = useSelector(state => state.questions)\n    const questionData = question.questions\n\n    const users = useSelector(state => state.users)\n    const userData = users.user;\n\n\n    // const poolId = users.user;\n\n    const [questions, setQuestions] = useState([])\n    const [error, setError] = useState('')\n\n    function getQeustionData() {\n        const apiName = 'BASE';\n        const path = '/pools/sport/NFL/trues';\n        const myInit = { headers: {} };\n\n        API\n            .get(apiName, path, myInit)\n            .then(response => {\n                if (response.pools && response.pools.length > 0) {\n                    const allQuestion = response.pools[0].questions;\n                    setError('')\n                    dispatch(saveQuestionData({\n                        data: allQuestion,\n                        successCb: (res) => {\n                            ///result here\n                        }\n                    }))\n                }\n                else {\n                    setError('No questions found')\n                }\n            })\n            .catch(error => {\n                console.log(error)\n                setError('No questions found')\n            });\n    }\n    useEffect(() => {\n        getQeustionData()\n    }, [])\n\n    function onSave() {\n\n        const apiName = 'BASE';\n        const path = '/createBetForUser';\n        const myInit = {\n            headers: {},\n            body: {\n                \"poolId\": questions[0].poolId,\n                \"userId\": userData.id,\n                \"latitude\": 112312312,\n                \"longitude\": 123123123,\n                \"stateCode\": \"CO\",\n                \"questions\": [\n                    questions[0]\n                ]\n            }\n        };\n\n        API\n            .post(apiName, path, myInit)\n            .then(response => {\n                if (response.status === \"success\") {\n                    addToast(\"Success\", { appearance: 'success', autoDismiss: true });\n                    document.location.href = \"#/confirmation\";\n                }\n                else {\n                    addToast(\"error\", { appearance: 'error', autoDismiss: true });\n                }\n            })\n            .catch(error => {\n                setError('No questions found')\n                addToast(error, { appearance: 'error', autoDismiss: true });\n            });\n    }\n\n    function onOptionChecked({ questionId, questionOptionId, poolId }) {\n\n        let idx = questions.findIndex(ite => ite.questionId === questionId)\n        if (idx === -1) {\n            questions.push({ questionId, questionOptionId, poolId })\n        }\n        setQuestions([...questions])\n    }\n\n    function renderAnswer(answers) {\n        let { options, id, poolId } = answers\n        return options.map((answer, qidx) => {\n\n            return (\n                <Col md={6}>\n                    <Form.Group className=\"mb-2\" controlId=\"formBasicCheckbox\">\n                        <Form.Check\n                            type=\"radio\"\n                            name={id}\n                            label={answer.playerName}\n                            id={answer.id}\n                            onChange={(e) => e.target.value}\n                            onClick={() => onOptionChecked({ questionId: id, questionOptionId: answer.id, poolId: poolId })}\n                        />\n                    </Form.Group>\n                </Col>\n            )\n        })\n    }\n    function rendorQuestions() {\n        if (error != '') {\n            return (\n                <p>{error}</p>\n            )\n        }\n        return questionData && questionData.map((item, idx) => {\n            return (\n                <div className=\"border-bottom pb-3 pt-3\">\n                    <Row className=\"mb-3\">\n                        <Col><h5>Question {item.questionNumber}</h5></Col>\n                    </Row>\n                    <Row className=\"mb-3\">\n                        <Col>{item.question}</Col>\n                    </Row>\n                    <Row>\n                        {renderAnswer(item)}\n                    </Row>\n\n                </div>\n            )\n        })\n    }\n    return (\n\n        <Container >\n\n            <Row className=\"justify-content-center mt-5\">\n                <a href=\"#/login\">\n                    <img className=\"img-fluid logo\" src={logo} />\n                </a>\n            </Row>\n            <Row md={12} className=\"pb-5 mb-5\">\n                <Col md={10} className=\"mt-5 offset-md-1\" sm={6}>\n                    <div class=\"dash-container\">\n                        <Row className=\"justify-content-center mb-5\">\n                            <h2 className=\"text \">Questions</h2>\n                            <p className=\"text-center\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore.</p>\n                        </Row>\n                        <Row className=\"mt-5 detail offset-md-1\">\n                            <Col md={11}>\n                                <Card className=\"text-center p-md-5 p-sm-2\">\n\n                                    <Container>\n                                        <Form className=\"text-left\">\n\n                                            {rendorQuestions()}\n\n                                        </Form>\n                                    </Container>\n\n                                    <Card.Body>\n                                        {error == '' && (\n                                            <Row className={'pt-3 justify-content-center'} noGutters>\n                                                <Col md={3} className=\"mr-2 mb-3 justify-content-center\">\n                                                    <a href=\"#/login\">\n                                                        <ButtonView\n                                                            variant={'danger'}\n                                                            title={'Cancel'}\n                                                            block={true}\n                                                        />\n                                                    </a>\n                                                </Col>\n                                                <Col md={3} className=\"ml-2 justify-content-center\">\n                                                    {/* <a href=\"#/confirmation\"> */}\n                                                    <ButtonView\n                                                        variant={'primary'}\n                                                        title={'Continue'}\n                                                        block={true}\n                                                        onClick={() => onSave()}\n                                                    />\n                                                    {/* </a> */}\n                                                </Col>\n                                            </Row>\n                                        )}\n\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </div>\n\n                </Col>\n            </Row>\n\n        </Container>\n    )\n}\n\nexport default Questions","import React, { useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Formik } from 'formik'\nimport logo from \"assets/img/logo.png\";\nimport ButtonView from 'components/Button';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveUserData } from 'actions/users'\n\n\nfunction Confirmation() {\n\n    const users = useSelector(state => state.users)\n    const userData = users.user;\n    console.log(userData)\n\n    function loginUser(values) {\n        window.location.href = '#/users'\n    }\n    return (\n        <Container >\n            <Row className=\"justify-content-center mt-5\">\n                <a href=\"#/login\">\n                    <img className=\"img-fluid logo\" src={logo} />\n                </a>\n            </Row>\n            <Row md={12}>\n                <Col md={6} className=\"mt-5 offset-md-3\" sm={6}>\n                    <div class=\"dash-container\">\n                        <Row className=\"justify-content-center mb-5\">\n                            <h2 className=\"text \">Confirmation</h2>\n                            <h5 className=\"text \">Bet has been placed for {userData.firstName} {userData.lastName}</h5>\n                        </Row>\n                        <Formik\n                            initialValues={{ email: \"\" }}\n                            // Hooks up our validationSchema to Formik \n                            enableReinitialize={true}\n                            onSubmit={async (values, { setSubmitting, resetForm }) => {\n                                loginUser(values)\n                            }}>\n                            {({\n                                values,\n                                errors,\n                                touched,\n                                handleChange,\n                                handleBlur,\n                                handleSubmit,\n                                isSubmitting,\n                            }) => (\n                                <>\n\n\n                                    <Row className={'pt-3 justify-content-center'} noGutters>\n                                        <Col md={12} className=\"d-flex justify-content-center\">\n\n                                            <ButtonView\n                                                variant={'primary'}\n                                                title={'Search User'}\n                                                block={true}\n                                                onClick={handleSubmit}\n                                            />\n\n                                        </Col>\n                                    </Row>\n                                </>\n                            )}\n                        </Formik>\n                    </div>\n                </Col>\n                <Col md={2} sm={3} />\n            </Row>\n        </Container>\n    )\n}\n\nexport default Confirmation","import React, { useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport logo from \"assets/img/logo.png\";\n\nfunction PrivacyPolicy() {\n    return (\n        <Container >\n            <Row className=\"justify-content-center\">\n                <a href=\"#/login\">\n                    <img className=\"img-fluid logo\" src={logo} />\n                </a>\n            </Row>\n            <Row md={12}>\n                <Col md={10} className=\"mt-3 offset-md-1 pb-5\" sm={6}>\n                    <div className=\"dash-container\">\n                        <Row className=\"justify-content-center mb-5\">\n                            <h2 className=\"text \">Privacy Policy</h2>\n                        </Row>\n                        <div>\n                            <h3>\n                                Meet The Team\n                            </h3>\n                            <p>*Bios and headshots found in google drive folder</p>\n                            <h3>\n                                About Us\n                            </h3>\n                            <p>Description: Pick Perfect is a licensed, daily fantasysports app based out of Denver, Colorado.Users sign up and submit an entry into our daily fantasysports pool. Download the app on yourphone, answer 10 questions correctly, and have a chanceto win millions fora $20 entrance fee.Our mobile-first app works on both iOS and Androiddevices. We are here to change the game.</p>\n\n                            <h3>\n                                Our Mission\n                            </h3>\n                            <p>PickPerfect is passionate about giving back. We arefor the people, by the people, and the firstto add a charitable element to daily fantasy sports.Users have a chance to win millions ofdollars in prize money. A portion of proceeds goesdirectly to our charity, Field of Dreams, toencourage the adoption of youth sports in developingareas around the United States. Simplypick all 10 questions perfect to win!</p>\n\n                            <h3>\n                                Follow Pick Perfect\n                            </h3>\n                            <h6>Stay up to date with PickPerfect:</h6>\n                            <p>Instagram:  @pickperfectapp</p>\n                            <p>Facebook: @pickperfectapp</p>\n                            <p>TikTok: @pickperfect</p>\n                            <p>Twitter: @pickperfectapp</p>\n                            <p>Linkedin: (Pick Perfect page is set up - Amanda w/admin access)</p>\n\n                            <h3>\n                                Contact Us\n                            </h3>\n                            <p>Let’s chat. Contact us at help@pickperfect.co</p>\n\n                            <h2>\n                                FAQs\n                            </h2>\n                            <h3>\n                                How do I play?\n                            </h3>\n                            <p>Go to the app store to download Pick Perfect (link).Once downloaded, enter your information todeposit money into your Pick Perfect account. Chooseyour 10 players and enter the prize poolfor a chance to win millions!</p>\n                            <h3>\n                                How do I add funds?\n                            </h3>\n                            <p>PayPal is the online transaction process we use toget funds into your pick perfect account</p>\n                            <h3>Is there any other way to add funds other than PayPal?</h3>\n                            <p>Currently we only use paypal to get funds into your account. You can sign up in a coupleminutes via paypal if you haven't already done so.</p>\n                            <h3>Why is my screen taking a long time to load?</h3>\n                            <p>The app is working through your request and can takea minute. If it takes any longer thankicking a 50 yard field goal, close out the app andrestart.</p>\n                            <h3>Who can play?</h3>\n                            <p>If you are 18+ years of age and are in an eligiblelocation, you can play!</p>\n                            <h3>What locations are eligible to play?</h3>\n                            <p>Please refer to our terms and conditions</p>\n                            <h3>How much does an entry to win cost?</h3>\n                            <p>Unlimited number of entries, $20 per entry.</p>\n                            <h3>What devices work on our platform?</h3>\n                            <p>Pick Perfect works on both iOS and Android.</p>\n                            <h3>What locations are eligible to play?</h3>\n                            <p>Please refer to our terms and conditions</p>\n                            <h3>What charity does a percentage of proceeds go towards?</h3>\n                            <p>Field of Dreams, a non-profit that promotes the adoptionof youth sports in communities of need</p>\n                            <h3>Notes: Additional platforms to consider on the websiteafter we have more content</h3>\n                            <p>Discord (will create account)</p>\n                            <p>YouTube (Pick Perfect channel is set up)</p>\n\n                        </div>\n\n\n                    </div>\n                </Col>\n                <Col md={2} sm={3} />\n            </Row>\n        </Container>\n    )\n}\n\nexport default PrivacyPolicy","import {\n    USER_SUCCESS,\n    USER_FAILURE\n} from 'actions/types';\n\nconst initialState = {\n    loading: false,\n    user: null,\n    errors: []\n};\n\nexport default function (state = initialState, action) {\n    const {\n        type,\n        payload\n    } = action;\n\n    switch (type) {\n       \n        case USER_SUCCESS:\n            \n            return {\n                ...state,\n                user:payload\n            }\n\n        case USER_FAILURE:\n            // clearLocalStorage();\n            AppUtils.showMessage(\"payload\", payload)\n            return {\n                ...state,\n                loading: false,\n            }\n        default:\n            return state\n    }\n}\n","import {\n    QUESTION_SUCCESS,\n    QUESTION_FAILURE\n} from 'actions/types';\n\nconst initialState = {\n    loading: false,\n    questions: null,\n    errors: []\n};\n\nexport default function (state = initialState, action) {\n    const {\n        type,\n        payload\n    } = action;\n\n    switch (type) {\n       \n        case QUESTION_SUCCESS:\n            \n            return {\n                ...state,\n                questions:payload\n            }\n\n        case QUESTION_FAILURE:\n            // clearLocalStorage();\n            AppUtils.showMessage(\"payload\", payload)\n            return {\n                ...state,\n                loading: false,\n            }\n        default:\n            return state\n    }\n}\n","import { USER_FAILURE } from 'actions/types';\nimport { combineReducers } from 'redux';\n\n// Reducers\n// import DocumentData from './DocumentData';\nimport users from './users'\nimport questions from './questions'\n\nconst appReducer = combineReducers({\n    users,\n    questions,\n});\n\nconst rootReducer = (state, action) => {\n\n    if ([USER_FAILURE].includes(action.type)) {\n       state = undefined\n    }\n  \n    return appReducer(state, action)\n  }\nexport default rootReducer;","// Imports: Dependencies\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from 'reducers';\n\nconst middleware = [thunk];\n// Redux: Store\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(\n        applyMiddleware(...middleware)\n    )\n);\n\n// Exports\nexport {\n    store\n}\n","/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v2.0.0\n=========================================================\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/css/animate.min.css\";\nimport \"./assets/scss/light-bootstrap-dashboard-react.scss?v=2.0.0\";\nimport \"./assets/css/style.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nimport Login from \"views/Login\";\nimport Forgot from \"views/Forgot\";\nimport ChangePassword from \"views/ChangePassword\";\nimport Users from \"views/Users\";\nimport UserDetails from \"views/UserDetail\";\nimport Questions from \"views/Questions\";\nimport Confirmation from \"views/Confirmation\";\nimport PrivacyPolicy from \"views/PrivacyPolicy\";\nimport { ToastProvider } from 'react-toast-notifications';\nimport { Provider } from 'react-redux';\nimport { store } from 'store'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ToastProvider styles={{\n      container: (provided) => ({ ...provided, zIndex: 999999, top: 50 })\n    }}>\n      <HashRouter>\n        <Switch>          \n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/forgot\" component={Forgot} />\n          <Route path=\"/change-password\" component={ChangePassword} />\n          <Route path=\"/users\" component={Users} />\n          <Route path=\"/user-details\" component={UserDetails} />\n          <Route path=\"/questions\" component={Questions} />\n          <Route path=\"/confirmation\" component={Confirmation} />\n          <Route path=\"/privacy-policy\" component={PrivacyPolicy} />\n          <Redirect from=\"/\" to=\"/login\" />\n        </Switch>\n      </HashRouter>\n    </ToastProvider>\n  </Provider>\n  ,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}